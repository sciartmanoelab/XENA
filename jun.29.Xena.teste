## http://analysis.xenahubs.net/b6643a43583b7db4ee170c079a79b2e070643279/ 
Xena Differential Gene Expression Analysis Pipeline

This pipeline enables you to run a differential gene expression analysis and further downstream analyses. The pipeline includes: PCA/t-SNE analysis, total gene expression analysis, differential gene expression analysis, pathway enrichment analysis, and L1000 small molecule search. The pipeline is adapted from the 



## Tudo que o site deu
Success
Xena Differential Gene Expression Analysis Pipeline

This pipeline enables you to run a differential gene expression analysis and further downstream analyses. The pipeline includes: PCA/t-SNE analysis, total gene expression analysis, differential gene expression analysis, pathway enrichment analysis, and L1000 small molecule search. The pipeline is adapted from the Ma'ayan lab's Appyter bulk RNA-seq analysis

# Basic libraries
import pandas as pd
import os
import re
import requests, json
import sys
import geode
import random
from time import sleep
import time
import numpy as np
import warnings
import base64  
from pandas.api.types import CategoricalDtype
import resource, signal

# Visualization
import plotly
from plotly import tools
import plotly.express as px
import plotly.graph_objs as go
plotly.offline.init_notebook_mode() # To embed plots in the output cell of the notebook

import matplotlib.pyplot as plt; plt.rcdefaults()
from matplotlib import rcParams
from matplotlib.lines import Line2D
from matplotlib_venn import venn2, venn3
%matplotlib inline

import IPython
from IPython.display import HTML, display, Markdown, IFrame

import chart_studio
import chart_studio.plotly as py

# xena
import smart_open

# Data analysis
from itertools import combinations
import scipy.spatial.distance as dist
import scipy.stats as ss
from sklearn.decomposition import PCA
from sklearn.preprocessing import quantile_transform

from rpy2 import robjects
from rpy2.robjects import r, pandas2ri

# External Code
from utils import *

# Parse Xena Browser post data
DE_params = r"""{"preferredExpression":{"name":"TCGA-BRCA.htseq_fpkm-uq.tsv","host":"https://gdc.xenahubs.net","probemap":"gencode.v22.annotation.gene.probeMap","unit":"log2(fpkm-uq+1)","label":"HTSeq - FPKM-UQ"},"filteredCodes":["Primary Tumor","Solid Tissue Normal","Metastatic"],"samples":["TCGA-C8-A3M8-01A","TCGA-BH-A0EI-01A","TCGA-AN-A0AL-01A","TCGA-A2-A0YK-01A","TCGA-OL-A66N-01A","TCGA-AO-A12B-01A","TCGA-A2-A1FZ-01A","TCGA-E9-A1RF-11A","TCGA-E9-A1NA-11A","TCGA-A7-A13E-11A","TCGA-UU-A93S-01A","TCGA-B6-A0WW-01A","TCGA-A7-A5ZX-01A","TCGA-BH-A0B5-01A","TCGA-BH-A1F8-11B","TCGA-BH-A1EW-11B","TCGA-E9-A3HO-01A","TCGA-AO-A1KQ-01A","TCGA-A2-A0ER-01A","TCGA-E2-A1L7-01A","TCGA-BH-A203-11A","TCGA-AO-A0J9-01A","TCGA-BH-A1FH-11B","TCGA-BH-A0E0-11A","TCGA-BH-A0DO-11A","TCGA-D8-A141-01A","TCGA-A1-A0SQ-01A","TCGA-E2-A1LG-01A","TCGA-OL-A5RZ-01A","TCGA-LL-A6FQ-01A","TCGA-AO-A0JI-01A","TCGA-B6-A400-01A","TCGA-D8-A73W-01A","TCGA-B6-A0I5-01A","TCGA-E9-A1N9-01A","TCGA-AR-A1AK-01A","TCGA-AC-A3TN-01A","TCGA-C8-A8HR-01A","TCGA-A8-A090-01A","TCGA-AC-A2FF-01A","TCGA-GM-A2DK-01A","TCGA-EW-A6SC-01A","TCGA-BH-A1F0-01A","TCGA-A8-A08O-01A","TCGA-B6-A0IE-01A","TCGA-E9-A1NI-01A","TCGA-A7-A0DC-11A","TCGA-BH-A1EO-01A","TCGA-A2-A0T4-01A","TCGA-B6-A1KN-01A","TCGA-A7-A6VY-01A","TCGA-C8-A12Y-01A","TCGA-AR-A2LO-01A","TCGA-GI-A2C8-11A","TCGA-S3-A6ZH-01A","TCGA-E2-A14Y-01A","TCGA-A2-A0CO-01A","TCGA-OL-A5D8-01A","TCGA-BH-A0DG-01A","TCGA-BH-A0HL-01A","TCGA-A7-A26G-01A","TCGA-A2-A0D0-01A","TCGA-D8-A27K-01A","TCGA-BH-A0BL-11A","TCGA-AC-A5EH-01A","TCGA-E2-A15J-01A","TCGA-B6-A0RP-01A","TCGA-E9-A295-01A","TCGA-AO-A03L-01A","TCGA-BH-A18F-11A","TCGA-AR-A24Q-01A","TCGA-D8-A1JL-01A","TCGA-A7-A0CJ-01A","TCGA-AR-A252-01A","TCGA-C8-A3M7-01A","TCGA-BH-A18V-11A","TCGA-AN-A0AK-01A","TCGA-A2-A0YJ-01A","TCGA-AO-A12A-01A","TCGA-MS-A51U-01A","TCGA-E2-A15K-06A","TCGA-BH-A0H3-11A","TCGA-AC-A2FM-11B","TCGA-C8-A275-01A","TCGA-B6-A0WV-01A","TCGA-BH-A0B4-01A","TCGA-B6-A0X7-01A","TCGA-A7-A5ZW-01A","TCGA-BH-A1EV-11A","TCGA-E9-A3Q9-01A","TCGA-AO-A1KP-01A","TCGA-E2-A576-01A","TCGA-A2-A0EQ-01A","TCGA-BH-A0BD-01A","TCGA-E2-A1L6-01A","TCGA-BH-A1FG-11B","TCGA-AO-A0J8-01A","TCGA-BH-A0RX-01A","TCGA-D8-A1XM-01A","TCGA-LL-A740-01A","TCGA-D8-A140-01A","TCGA-BH-A0BT-01A","TCGA-A1-A0SP-01A","TCGA-V7-A7HQ-01A","TCGA-LL-A6FP-01A","TCGA-BH-A18N-01A","TCGA-OL-A5RY-01A","TCGA-E9-A1N8-01A","TCGA-AR-A1AJ-01A","TCGA-AC-A3TM-01A","TCGA-C8-A8HQ-01A","TCGA-AC-A2FE-01A","TCGA-A8-A0A9-01A","TCGA-EW-A6SB-01A","TCGA-BH-A1EN-01A","TCGA-E2-A10C-01A","TCGA-AC-A3HN-01A","TCGA-A7-A0DB-11A","TCGA-E9-A1NH-01A","TCGA-BH-A0GZ-01A","TCGA-A2-A0T3-01A","TCGA-C8-A12X-01A","TCGA-S3-A6ZG-01A","TCGA-AR-A2LN-01A","TCGA-AN-A0XW-01A","TCGA-BH-A0AZ-11A","TCGA-E2-A14X-01A","TCGA-E2-A159-01A","TCGA-AN-A03Y-01A","TCGA-OL-A5D7-01A","TCGA-EW-A1J6-01A","TCGA-A7-A26F-01B","TCGA-BH-A0HK-01A","TCGA-A7-A26F-01A","TCGA-AC-A2QJ-11A","TCGA-A7-A6VX-01A","TCGA-AC-A62V-01A","TCGA-B6-A0RO-01A","TCGA-E2-A15I-01A","TCGA-BH-A0DV-01A","TCGA-BH-A0E7-01A","TCGA-D8-A1JK-01A","TCGA-AR-A24P-01A","TCGA-AR-A251-01A","TCGA-AQ-A7U7-01A","TCGA-PL-A8LZ-01A","TCGA-AN-A0AJ-01A","TCGA-OL-A66L-01A","TCGA-A2-A0YI-01A","TCGA-E9-A1RD-11A","TCGA-A2-A1FX-01A","TCGA-BH-A18U-11A","TCGA-XX-A899-01A","TCGA-C8-A274-01A","TCGA-A7-A5ZV-01A","TCGA-BH-A0B3-01A","TCGA-BH-A1EU-11A","TCGA-BH-A1F6-11B","TCGA-A2-A259-01A","TCGA-E2-A1II-11A","TCGA-AO-A1KO-01A","TCGA-A2-A0EP-01A","TCGA-BH-A0BC-01A","TCGA-S3-AA0Z-01A","TCGA-A8-A07L-01A","TCGA-AO-A0J7-01A","TCGA-D8-A1XL-01A","TCGA-BH-A0BS-01A","TCGA-EW-A3U0-01A","TCGA-E2-A1LE-01A","TCGA-OL-A5RX-01A","TCGA-A1-A0SO-01A","TCGA-BH-A18M-01A","TCGA-GM-A2D9-01A","TCGA-AO-A0JG-01A","TCGA-D8-A73U-01A","TCGA-AR-A1AI-01A","TCGA-C8-A8HP-01A","TCGA-LL-A5YP-01A","TCGA-JL-A3YX-01A","TCGA-EW-A2FW-01A","TCGA-GM-A2DI-01A","TCGA-EW-A6SA-01A","TCGA-B6-A0IC-01A","TCGA-E2-A10B-01A","TCGA-AR-A1AY-01A","TCGA-E9-A1NG-01A","TCGA-E2-A3DX-01A","TCGA-BH-A0GY-01A","TCGA-A2-A0T2-01A","TCGA-A7-A6VW-01A","TCGA-AN-A0XV-01A","TCGA-AR-A2LM-01A","TCGA-C8-A138-01A","TCGA-S3-A6ZF-01A","TCGA-AR-A0TZ-01A","TCGA-E2-A14W-01A","TCGA-AN-A049-01A","TCGA-A2-A0CM-01A","TCGA-E2-A158-01A","TCGA-BH-A0DE-01A","TCGA-A7-A26E-01A","TCGA-OL-A5D6-01A","TCGA-A8-A09N-01A","TCGA-A7-A26E-01B","TCGA-D8-A27I-01A","TCGA-A7-A4SF-01A","TCGA-AN-A03X-01A","TCGA-BH-A1FN-01A","TCGA-EW-A1J5-01A","TCGA-BH-A209-01A","TCGA-C8-A12W-01A","TCGA-E2-A15H-01A","TCGA-B6-A0RN-01A","TCGA-BH-A0BJ-11A","TCGA-BH-A0E6-01A","TCGA-AR-A250-01A","TCGA-D8-A1JJ-01A","TCGA-A7-A0CH-01A","TCGA-AR-A24O-01A","TCGA-BH-A0BZ-11A","TCGA-E2-A1LL-11A","TCGA-BH-A0AY-11A","TCGA-BH-A18T-11A","TCGA-PL-A8LY-01A","TCGA-A2-A0YH-01A","TCGA-A7-A0D9-01A","TCGA-E9-A1RC-11A","TCGA-OL-A66K-01A","TCGA-A2-A1FW-01A","TCGA-AC-A2FK-11A","TCGA-D8-A4Z1-01A","TCGA-B6-A0WT-01A","TCGA-BH-A0B2-01A","TCGA-BH-A1F5-11A","TCGA-B6-A0X5-01A","TCGA-A8-A06Z-01A","TCGA-C8-A273-01A","TCGA-BH-A1ET-11B","TCGA-BH-A0HA-11A","TCGA-E2-A574-01A","TCGA-W8-A86G-01A","TCGA-A2-A0EO-01A","TCGA-AN-A0G0-01A","TCGA-BH-A1FE-11B","TCGA-AO-A0J6-01A","TCGA-D8-A1XK-01A","TCGA-BH-A0DL-11A","TCGA-BH-A0BR-01A","TCGA-A1-A0SN-01A","TCGA-BH-A1FU-11A","TCGA-OL-A5RW-01A","TCGA-AO-A0JF-01A","TCGA-BH-A18L-01A","TCGA-BH-A0C3-01A","TCGA-A2-A3XZ-01A","TCGA-WT-AB44-01A","TCGA-E9-A1QZ-01A","TCGA-AR-A1AH-01A","TCGA-E9-A1N6-01A","TCGA-A2-A4RY-01A","TCGA-LL-A5YO-01A","TCGA-A8-A08L-01A","TCGA-JL-A3YW-01A","TCGA-A8-A0A7-01A","TCGA-GM-A2DH-01A","TCGA-EW-A2FV-01A","TCGA-B6-A0I2-01A","TCGA-E9-A1NF-01A","TCGA-E2-A10A-01A","TCGA-AR-A1AX-01A","TCGA-B6-A0IB-01A","TCGA-BH-A0H9-01A","TCGA-A2-A0T1-01A","TCGA-C8-A137-01A","TCGA-AR-A2LL-01A","TCGA-C8-A12V-01A","TCGA-AR-A0TY-01A","TCGA-E2-A14V-01A","TCGA-A2-A0CL-01A","TCGA-HN-A2NL-01A","TCGA-BH-A0HI-01A","TCGA-D8-A1J9-01A","TCGA-A8-A09M-01A","TCGA-AN-A0XU-01A","TCGA-A7-A4SE-01A","TCGA-D8-A27H-01A","TCGA-BH-A1FM-01A","TCGA-BH-A208-01A","TCGA-AC-A3EH-01A","TCGA-E2-A15G-01A","TCGA-B6-A0RM-01A","TCGA-OL-A6VR-01A","TCGA-BH-A0DD-01A","TCGA-BH-A0DT-01A","TCGA-AR-A24N-01A","TCGA-D8-A1JI-01A","TCGA-GM-A3XG-01A","TCGA-A7-A0CG-01A","TCGA-BH-A0HY-01A","TCGA-A7-A6VV-01A","TCGA-E2-A1LK-11A","TCGA-BH-A18S-11A","TCGA-PL-A8LX-01A","TCGA-BH-A0EE-01A","TCGA-OL-A66J-01A","TCGA-A2-A0YG-01A","TCGA-E9-A1RB-11A","TCGA-A2-A1FV-01A","TCGA-B6-A0X4-01A","TCGA-B6-A0WS-01A","TCGA-BH-A0B1-01A","TCGA-BH-A1ES-11A","TCGA-A8-A06Y-01A","TCGA-AQ-A54O-01A","TCGA-E2-A1IG-11A","TCGA-E2-A573-01A","TCGA-E9-A229-01A","TCGA-AC-A3OD-01A","TCGA-AC-A3OD-01B","TCGA-A2-A0EN-01A","TCGA-C8-A27B-01A","TCGA-EW-A1OZ-01A","TCGA-AN-A0FN-01A","TCGA-A8-A07J-01A","TCGA-AO-A0J5-01A","TCGA-A2-A04Y-01A","TCGA-D8-A1XJ-01A","TCGA-BH-A1FD-11B","TCGA-BH-A0DK-11A","TCGA-BH-A0BA-01A","TCGA-BH-A0BQ-01A","TCGA-A1-A0SM-01A","TCGA-OL-A5RV-01A","TCGA-A8-A07Z-01A","TCGA-BH-A18K-01A","TCGA-D8-A1XZ-01A","TCGA-AO-A0JE-01A","TCGA-A2-A3XY-01A","TCGA-E9-A1N5-01A","TCGA-B6-A0I1-01A","TCGA-BH-A8FZ-01A","TCGA-A2-A4RX-01A","TCGA-LL-A5YN-01A","TCGA-E2-A1LS-01A","TCGA-AC-A2FB-01A","TCGA-A8-A0A6-01A","TCGA-E9-A1NE-01A","TCGA-B6-A0IA-01A","TCGA-AR-A1AW-01A","TCGA-OK-A5Q2-01A","TCGA-AC-A2BM-01A","TCGA-A2-A0T0-01A","TCGA-AN-A0XT-01A","TCGA-BH-A5IZ-01A","TCGA-AR-A2LK-01A","TCGA-C8-A12U-01A","TCGA-AR-A0TX-01A","TCGA-B6-A0IQ-01A","TCGA-E2-A156-01A","TCGA-E2-A14U-01A","TCGA-A2-A0CK-01A","TCGA-EW-A1J3-01A","TCGA-5T-A9QA-01A","TCGA-D8-A1J8-01A","TCGA-E2-A1IO-01A","TCGA-D8-A27G-01A","TCGA-A7-A4SD-01A","TCGA-BH-A0B8-11A","TCGA-BH-A1FL-01A","TCGA-OL-A6VQ-01A","TCGA-E2-A15F-01A","TCGA-B6-A0RL-01A","TCGA-E2-A1B6-01A","TCGA-BH-A0DS-01A","TCGA-AR-A24M-01A","TCGA-D8-A1JH-01A","TCGA-BH-A0HX-01A","TCGA-D8-A27W-01A","TCGA-LD-A7W6-01A","TCGA-BH-A28Q-01A","TCGA-BH-A18R-11A","TCGA-A2-A0YF-01A","TCGA-OL-A66I-01A","TCGA-A2-A1G6-01A","TCGA-AC-A5XS-11A","TCGA-BH-A0B0-01A","TCGA-A8-A079-01A","TCGA-A8-A06X-01A","TCGA-D8-A1X9-01A","TCGA-AQ-A54N-01A","TCGA-Z7-A8R6-01A","TCGA-E2-A1IF-11A","TCGA-A2-A04X-01A","TCGA-E9-A228-01A","TCGA-E2-A572-01A","TCGA-A2-A0EM-01A","TCGA-C8-A27A-01A","TCGA-EW-A1OY-01A","TCGA-BH-A1FC-11A","TCGA-A8-A07I-01A","TCGA-AO-A0J4-01A","TCGA-A2-A25F-01A","TCGA-E9-A22H-01A","TCGA-BH-A0BP-01A","TCGA-BH-A0C1-01B","TCGA-E2-A1LB-01A","TCGA-OL-A5RU-01A","TCGA-AO-A0JD-01A","TCGA-BH-A18J-01A","TCGA-D8-A1XY-01A","TCGA-E2-A15M-11A","TCGA-BH-A0DZ-11A","TCGA-A2-A3XX-01A","TCGA-E9-A1N4-01A","TCGA-BH-A8FY-01A","TCGA-BH-A0C1-01A","TCGA-A2-A4RW-01A","TCGA-LL-A5YM-01A","TCGA-A8-A08J-01A","TCGA-GM-A2DF-01A","TCGA-A7-A13H-01A","TCGA-BH-A42V-01A","TCGA-E9-A1ND-01A","TCGA-E9-A1RI-01A","TCGA-AR-A1AV-01A","TCGA-GM-A3NY-01A","TCGA-BH-A0H7-01A","TCGA-B6-A1KI-01A","TCGA-A8-A08Z-01A","TCGA-AN-A0XS-01A","TCGA-AR-A2LJ-01A","TCGA-BH-A0B7-11A","TCGA-C8-A135-01A","TCGA-AR-A0TW-01A","TCGA-B6-A0IP-01A","TCGA-E2-A155-01A","TCGA-E2-A14T-01A","TCGA-AN-A046-01A","TCGA-EW-A1J2-01A","TCGA-C8-A12T-01A","TCGA-E2-A1IN-01A","TCGA-A8-A09K-01A","TCGA-D8-A27F-01A","TCGA-A7-A4SC-01A","TCGA-E2-A15E-01A","TCGA-A2-A0CZ-01A","TCGA-E2-A1B5-01A","TCGA-BH-A0HW-01A","TCGA-AC-A8OS-01A","TCGA-D8-A1JG-01B","TCGA-A7-A0CE-01A","TCGA-LD-A7W5-01A","TCGA-D8-A27V-01A","TCGA-AR-A24L-01A","TCGA-BH-A0BW-11A","TCGA-E2-A1LI-11A","TCGA-C8-A1HO-01A","TCGA-A7-A3J1-01A","TCGA-BH-A18Q-11A","TCGA-PL-A8LV-01A","TCGA-BH-AB28-11A","TCGA-A2-A0YE-01A","TCGA-OL-A66H-01A","TCGA-AC-A3BB-01A","TCGA-GM-A5PX-01A","TCGA-BH-A1F2-11A","TCGA-D8-A1X8-01A","TCGA-Z7-A8R5-01A","TCGA-A2-A04W-01A","TCGA-E9-A227-01A","TCGA-S3-AA17-01A","TCGA-EW-A1OX-01A","TCGA-AN-A0FL-01A","TCGA-AO-A0J3-01A","TCGA-BH-A1FB-11A","TCGA-BH-A0DI-11A","TCGA-A2-A25E-01A","TCGA-E2-A1IU-11A","TCGA-E9-A22G-01A","TCGA-BH-A0C0-01A","TCGA-A1-A0SK-01A","TCGA-E2-A1LA-01A","TCGA-BH-A0BO-01A","TCGA-AO-A0JC-01A","TCGA-BH-A18I-01A","TCGA-B6-A3ZX-01A","TCGA-LL-A73Z-01A","TCGA-BH-A1FR-11B","TCGA-A2-A3XW-01A","TCGA-WT-AB41-01A","TCGA-E9-A1N3-01A","TCGA-D8-A13Z-01A","TCGA-E2-A15L-11A","TCGA-LL-A5YL-01A","TCGA-A8-A08I-01A","TCGA-A8-A0A4-01A","TCGA-EW-A2FS-01A","TCGA-A7-A13G-01A","TCGA-A7-A13G-01B","TCGA-BH-A42U-01A","TCGA-E9-A1NC-01A","TCGA-E9-A1RH-01A","TCGA-AR-A1AU-01A","TCGA-EW-A3E8-01B","TCGA-BH-A0H6-01A","TCGA-AQ-A04L-01B","TCGA-AC-A2BK-01A","TCGA-BH-A2L8-01A","TCGA-A8-A0AD-01A","TCGA-C8-A134-01A","TCGA-LD-A66U-01A","TCGA-LL-A50Y-01A","TCGA-BH-A1EY-01A","TCGA-AR-A0TV-01A","TCGA-B6-A0IO-01A","TCGA-E9-A249-01A","TCGA-E2-A154-01A","TCGA-BH-A0AU-11A","TCGA-EW-A1J1-01A","TCGA-AN-A0XR-01A","TCGA-BH-A0HF-01A","TCGA-E2-A14S-01A","TCGA-D8-A27E-01A","TCGA-A7-A4SB-01A","TCGA-BH-A1FJ-01A","TCGA-BH-A0BF-11A","TCGA-OL-A6VO-01A","TCGA-E2-A15D-01A","TCGA-AQ-A04L-01A","TCGA-A2-A0CY-01A","TCGA-E2-A1B4-01A","TCGA-BH-A0DQ-01A","TCGA-AR-A24K-01A","TCGA-AC-A8OR-01A","TCGA-BH-A0E2-01A","TCGA-A8-A09Z-01A","TCGA-D8-A1JF-01A","TCGA-A7-A0CD-01A","TCGA-BH-A0BV-11A","TCGA-E2-A1LH-11A","TCGA-C8-A1HN-01A","TCGA-BH-A28O-01A","TCGA-E2-A15T-01A","TCGA-AC-A23H-01A","TCGA-E2-A1BD-01A","TCGA-BH-A0EB-01A","TCGA-AO-A03V-01A","TCGA-A7-A3J0-01A","TCGA-A2-A0YD-01A","TCGA-A2-A1G4-01A","TCGA-BH-A18P-11A","TCGA-E2-A15E-06A","TCGA-AC-A2FG-11A","TCGA-B6-A0X1-01A","TCGA-BH-A6R9-01A","TCGA-A2-A0YT-01A","TCGA-D8-A1X7-01A","TCGA-E2-A570-01A","TCGA-A2-A04V-01A","TCGA-E9-A226-01A","TCGA-EW-A1OW-01A","TCGA-E9-A2JT-01A","TCGA-AN-A0FK-01A","TCGA-AO-A0J2-01A","TCGA-D8-A1XG-01A","TCGA-A7-A56D-01A","TCGA-A8-A07G-01A","TCGA-A2-A25D-01A","TCGA-EW-A1P8-01A","TCGA-BH-A0DH-11A","TCGA-EW-A1PH-01A","TCGA-A1-A0SJ-01A","TCGA-A8-A07W-01A","TCGA-AO-A0JB-01A","TCGA-BH-A18H-01A","TCGA-D8-A1XW-01A","TCGA-AC-A4ZE-01A","TCGA-LL-A73Y-01A","TCGA-A2-A3XV-01A","TCGA-E2-A15K-11A","TCGA-E9-A1R7-01A","TCGA-D8-A13Y-01A","TCGA-A8-A08H-01A","TCGA-B6-A409-01A","TCGA-GM-A2DD-01A","TCGA-EW-A2FR-01A","TCGA-A7-A13F-01A","TCGA-BH-A42T-01A","TCGA-3C-AALK-01A","TCGA-E9-A1RG-01A","TCGA-AR-A1AT-01A","TCGA-GM-A3NW-01A","TCGA-BH-A0H5-01A","TCGA-AC-A2FO-01A","TCGA-A8-A099-01A","TCGA-D8-A3Z6-01A","TCGA-C8-A133-01A","TCGA-AR-A2LH-01A","TCGA-BH-A1EX-01A","TCGA-A8-A08X-01A","TCGA-AR-A0TU-01A","TCGA-B6-A0IN-01A","TCGA-E2-A153-01A","TCGA-E2-A14R-01A","TCGA-BH-A0B5-11A","TCGA-E9-A248-01A","TCGA-E2-A1IL-01A","TCGA-A7-A5ZX-11A","TCGA-A8-A09I-01A","TCGA-A7-A4SA-01A","TCGA-BH-A204-01A","TCGA-E2-A1L7-11A","TCGA-E2-A15C-01A","TCGA-AN-A04D-01A","TCGA-A2-A0CX-01A","TCGA-OL-A5DA-01A","TCGA-BH-A0E1-01A","TCGA-BH-A0HU-01A","TCGA-D8-A1JE-01A","TCGA-BH-A0DP-01A","TCGA-D8-A27T-01A","TCGA-B6-A0RI-01A","TCGA-AC-A8OQ-01A","TCGA-E2-A1LG-11A","TCGA-C8-A1HM-01A","TCGA-E2-A15S-01A","TCGA-AC-A7VC-01A","TCGA-AC-A23G-01A","TCGA-AO-A03U-01B","TCGA-BH-A0EA-01A","TCGA-AR-A24Z-01A","TCGA-D8-A1JU-01A","TCGA-A2-A0YC-01A","TCGA-E9-A1N9-11A","TCGA-E2-A1BC-01A","TCGA-AC-A2FF-11A","TCGA-B6-A0X0-01A","TCGA-GM-A5PV-01A","TCGA-AN-A0AT-01A","TCGA-BH-A6R8-01A","TCGA-A8-A076-01A","TCGA-A8-A06U-01A","TCGA-BH-A1F0-11B","TCGA-D8-A1X6-01A","TCGA-BH-A1EO-11A","TCGA-A2-A04U-01A","TCGA-S3-AA15-01A","TCGA-EW-A1OV-01A","TCGA-GI-A2C9-01A","TCGA-A8-A07F-01A","TCGA-EW-A1P7-01A","TCGA-BH-A0W7-01A","TCGA-D8-A1XF-01A","TCGA-AN-A0FJ-01A","TCGA-BH-A0DG-11A","TCGA-A2-A25C-01A","TCGA-E2-A14Y-11A","TCGA-E9-A22E-01A","TCGA-BH-A0BM-01A","TCGA-EW-A1PG-01A","TCGA-AN-A0FZ-01A","TCGA-AO-A0JA-01A","TCGA-BH-A18G-01A","TCGA-D8-A1XV-01A","TCGA-A1-A0SI-01A","TCGA-A2-A3XU-01A","TCGA-E9-A1R6-01A","TCGA-E9-A2JS-01A","TCGA-AR-A5QQ-01A","TCGA-A8-A08G-01A","TCGA-B6-A408-01A","TCGA-A8-A0A2-01A","TCGA-GM-A2DC-01A","TCGA-A7-A13E-01A","TCGA-A7-A13E-01B","TCGA-3C-AALJ-01A","TCGA-E9-A1NA-01A","TCGA-E9-A1RF-01A","TCGA-AR-A1AS-01A","TCGA-AQ-A04J-01A","TCGA-B6-A1KF-01A","TCGA-D8-A3Z5-01A","TCGA-C8-A12Q-01A","TCGA-C8-A132-01A","TCGA-BH-A1EW-01A","TCGA-BH-A1F8-01A","TCGA-AR-A0TT-01A","TCGA-A8-A0AB-01A","TCGA-E2-A152-01A","TCGA-E2-A14Q-01A","TCGA-B6-A0IM-01A","TCGA-E9-A247-01A","TCGA-AN-A0XP-01A","TCGA-E2-A1IK-01A","TCGA-BH-A1FH-01A","TCGA-BH-A203-01A","TCGA-AN-A04C-01A","TCGA-A2-A0CW-01A","TCGA-BH-A0E0-01A","TCGA-BH-A0DO-01B","TCGA-D8-A1JD-01A","TCGA-A8-A09X-01A","TCGA-AC-A8OP-01A","TCGA-B6-A0RH-01A","TCGA-BH-A0BT-11A","TCGA-C8-A1HL-01A","TCGA-E2-A15R-01A","TCGA-AC-A7VB-01A","TCGA-AO-A03T-01A","TCGA-BH-A18N-11A","TCGA-D8-A1JT-01A","TCGA-E9-A1N8-11A","TCGA-AO-A129-01A","TCGA-AC-A2FE-11B","TCGA-LL-A7T0-01A","TCGA-AN-A0AS-01A","TCGA-BH-A1EN-11A","TCGA-A8-A06T-01A","TCGA-A8-A075-01A","TCGA-A7-A0DC-01A","TCGA-D8-A1X5-01A","TCGA-A7-A0DC-01B","TCGA-A2-A3KD-01A","TCGA-E9-A1NH-11A","TCGA-A2-A04T-01A","TCGA-S3-AA14-01A","TCGA-GI-A2C8-01A","TCGA-EW-A1P6-01A","TCGA-LL-A8F5-01A","TCGA-A8-A07E-01A","TCGA-A2-A25B-01A","TCGA-E9-A3QA-01A","TCGA-E9-A22D-01A","TCGA-BH-A0HK-11A","TCGA-A2-A0EY-01A","TCGA-BH-A0BL-01A","TCGA-EW-A1PF-01A","TCGA-A1-A0SH-01A","TCGA-A8-A086-01A","TCGA-A8-A07U-01A","TCGA-BH-A18F-01A","TCGA-D8-A1XU-01A","TCGA-AN-A0FY-01A","TCGA-BH-A0DV-11A","TCGA-A2-A3XT-01A","TCGA-E2-A15I-11A","TCGA-E9-A1R5-01A","TCGA-AR-A5QP-01A","TCGA-EW-A424-01A","TCGA-AC-A2B8-01A","TCGA-A8-A08F-01A","TCGA-BH-A18V-01A","TCGA-GM-A2DB-01A","TCGA-A7-A13D-01A","TCGA-A7-A13D-01B","TCGA-3C-AALI-01A","TCGA-A8-A0A1-01A","TCGA-E9-A1RE-01A","TCGA-AR-A1AR-01A","TCGA-BH-A0H3-01A","TCGA-A8-A097-01A","TCGA-AC-A2FM-01A","TCGA-GM-A4E0-01A","TCGA-C8-A131-01A","TCGA-AN-A0XO-01A","TCGA-BH-A1EV-01A","TCGA-C8-A12P-01A","TCGA-AR-A0TS-01A","TCGA-AR-A0U4-01A","TCGA-E2-A14P-01A","TCGA-PE-A5DE-01A","TCGA-A7-A426-01A","TCGA-BH-A0B3-11B","TCGA-E2-A1IJ-01A","TCGA-A8-A09G-01A","TCGA-XX-A899-11A","TCGA-BH-A1FG-01A","TCGA-BH-A0BC-11A","TCGA-BH-A202-01A","TCGA-E2-A15A-01A","TCGA-AC-A3QQ-01A","TCGA-A2-A0CV-01A","TCGA-E2-A1B1-01A","TCGA-B6-A0RG-01A","TCGA-AR-A24H-01A","TCGA-D8-A1JC-01A","TCGA-A8-A09W-01A","TCGA-AC-A3QQ-01B","TCGA-D8-A27R-01A","TCGA-BH-A0BS-11A","TCGA-E2-A1LE-11A","TCGA-C8-A1HK-01A","TCGA-BH-A18M-11A","TCGA-AC-A23E-01A","TCGA-GM-A2D9-11A","TCGA-AR-A24X-01A","TCGA-D8-A1JS-01A","TCGA-AO-A128-01A","TCGA-A2-A1G1-01A","TCGA-GM-A2DI-11A","TCGA-AN-A0AR-01A","TCGA-E9-A1NG-11A","TCGA-A7-A0DB-01A","TCGA-AO-A12H-01A","TCGA-A2-A3KC-01A","TCGA-A7-A0DB-01C","TCGA-LQ-A4E4-01A","TCGA-XX-A89A-01A","TCGA-BH-A0AZ-01A","TCGA-EW-A1P5-01A","TCGA-BH-A0W5-01A","TCGA-AC-A2QJ-01A","TCGA-D8-A1XD-01A","TCGA-E2-A158-11A","TCGA-BH-A0DE-11A","TCGA-A2-A25A-01A","TCGA-A2-A0EX-01A","TCGA-A1-A0SG-01A","TCGA-AN-A0FX-01A","TCGA-A8-A085-01A","TCGA-EW-A1PE-01A","TCGA-D8-A1XT-01A","TCGA-BH-A1FN-11A","TCGA-BH-A209-11A","TCGA-A2-A3XS-01A","TCGA-E9-A1R4-01A","TCGA-D8-A147-01A","TCGA-A7-A0CH-11A","TCGA-A2-A4S3-01A","TCGA-EW-A423-01A","TCGA-E9-A54Y-01A","TCGA-5L-AAT1-01A","TCGA-BH-A18U-01A","TCGA-GM-A2DA-01A","TCGA-EW-A6S9-01A","TCGA-E9-A1RD-01A","TCGA-AR-A1AQ-01A","TCGA-A7-A0D9-11A","TCGA-AQ-A04H-01B","TCGA-LD-A9QF-01A","TCGA-A8-A096-01A","TCGA-4H-AAAK-01A","TCGA-C8-A130-01A","TCGA-C8-A12O-01A","TCGA-BH-A1EU-01A","TCGA-AN-A0XN-01A","TCGA-AR-A0U3-01A","TCGA-B6-A0IK-01A","TCGA-E2-A14O-01A","TCGA-AN-A041-01A","TCGA-LD-A74U-01A","TCGA-E9-A245-01A","TCGA-AC-A3YJ-01A","TCGA-BH-A0HB-01A","TCGA-E2-A1II-01A","TCGA-A2-A0SY-01A","TCGA-AR-A0TR-01A","TCGA-E2-A150-01A","TCGA-BH-A18V-06A","TCGA-A7-A425-01A","TCGA-BH-A201-01A","TCGA-AR-A2LE-01A","TCGA-AC-A3QP-01A","TCGA-A2-A0CU-01A","TCGA-E2-A1B0-01A","TCGA-AN-A04A-01A","TCGA-D8-A1JB-01A","TCGA-A8-A09V-01A","TCGA-BH-A1F6-01A","TCGA-BH-A0C3-11A","TCGA-PE-A5DD-01A","TCGA-C8-A1HJ-01A","TCGA-E9-A3X8-01A","TCGA-E2-A15P-01A","TCGA-AO-A03R-01A","TCGA-B6-A0RV-01A","TCGA-AR-A24W-01A","TCGA-BH-A18L-11A","TCGA-E9-A1N6-11A","TCGA-BH-A0B2-11A","TCGA-A2-A1G0-01A","TCGA-E2-A15A-06A","TCGA-AC-A3W7-01A","TCGA-A7-A3RF-01A","TCGA-A8-A06R-01A","TCGA-E9-A1NF-11A","TCGA-A7-A0DA-01A","TCGA-AO-A12G-01A","TCGA-BH-A0H9-11A","TCGA-A2-A04R-01A","TCGA-C8-A26Z-01A","TCGA-S3-AA12-01A","TCGA-BH-A0AY-01A","TCGA-EW-A1P4-01A","TCGA-A8-A07C-01A","TCGA-BH-A0W4-01A","TCGA-D8-A1XC-01A","TCGA-AC-A2QI-01A","TCGA-BH-A0DD-11A","TCGA-E9-A22B-01A","TCGA-A2-A0EW-01A","TCGA-BH-A0BJ-01A","TCGA-A1-A0SF-01A","TCGA-EW-A1PD-01A","TCGA-A8-A07S-01A","TCGA-A8-A084-01A","TCGA-AN-A0FW-01A","TCGA-D8-A1XS-01A","TCGA-AC-A3EH-11B","TCGA-BH-A1FM-11B","TCGA-OL-A5S0-01A","TCGA-AQ-A0Y5-01A","TCGA-E9-A1R3-01A","TCGA-D8-A146-01A","TCGA-A7-A4SE-11A","TCGA-AR-A5QN-01A","TCGA-BH-A0BZ-01A","TCGA-A2-A4S2-01A","TCGA-E2-A1LL-01A","TCGA-E9-A54X-01A","TCGA-5L-AAT0-01A","TCGA-BH-A18T-01A","TCGA-BH-A208-11A","TCGA-E2-A109-01A","TCGA-E9-A1RC-01A","TCGA-AR-A1AP-01A","TCGA-AC-A5XU-01A","TCGA-AC-A2FK-01A","TCGA-B6-A1KC-01A","TCGA-B6-A1KC-01B","TCGA-C8-A12N-01A","TCGA-BH-A1ET-01A","TCGA-BH-A1F5-01A","TCGA-AR-A0U2-01A","TCGA-B6-A0IJ-01A","TCGA-E9-A244-01A","TCGA-PE-A5DC-01A","TCGA-AC-A3YI-01A","TCGA-AR-A0TQ-01A","TCGA-BH-A0HA-01A","TCGA-A2-A0SX-01A","TCGA-A8-A09E-01A","TCGA-E2-A1IH-01A","TCGA-E2-A14N-01A","TCGA-A8-A08T-01A","TCGA-BH-A1FE-01A","TCGA-BH-A0BA-11A","TCGA-B6-A0RE-01A","TCGA-A2-A0CT-01A","TCGA-A8-A095-01A","TCGA-LL-A442-01A","TCGA-BH-A0HQ-01A","TCGA-D8-A1JA-01A","TCGA-BH-A0DL-01A","TCGA-D8-A27P-01A","TCGA-AC-A6NO-01A","TCGA-BH-A1FU-01A","TCGA-BH-A0BQ-11A","TCGA-C8-A1HI-01A","TCGA-E2-A15O-01A","TCGA-B6-A0RU-01A","TCGA-AC-A23C-01A","TCGA-BH-A18K-11A","TCGA-AR-A24V-01A","TCGA-E9-A1N5-11A","TCGA-AO-A126-01A","TCGA-BH-A0DT-11A","TCGA-E2-A1LS-11A","TCGA-AC-A2FB-11A","TCGA-A7-A3IZ-01A","TCGA-AC-A3W6-01A","TCGA-A8-A06Q-01A","TCGA-E9-A1NE-11A","TCGA-AO-A12F-01A","TCGA-A2-A04Q-01A","TCGA-AC-A2BM-11A","TCGA-C8-A26Y-01A","TCGA-S3-AA11-01A","TCGA-EW-A1P3-01A","TCGA-AN-A0FF-01A","TCGA-A8-A07B-01A","TCGA-BH-A0W3-01A","TCGA-AC-A2QH-01A","TCGA-AC-A2QH-01B","TCGA-D8-A1XB-01A","TCGA-BH-A0B9-01A","TCGA-E2-A56Z-01A","TCGA-E9-A22A-01A","TCGA-E2-A1IO-11A","TCGA-A2-A0EV-01A","TCGA-A7-A4SD-11A","TCGA-A1-A0SE-01A","TCGA-AN-A0FV-01A","TCGA-A8-A07R-01A","TCGA-A8-A083-01A","TCGA-EW-A1PC-01B","TCGA-D8-A1XR-01A","TCGA-D8-A1Y3-01A","TCGA-E9-A5UP-01A","TCGA-E9-A1R2-01A","TCGA-D8-A145-01A","TCGA-AR-A5QM-01A","TCGA-A2-A4S1-01A","TCGA-AC-A6IX-01A","TCGA-E2-A1LK-01A","TCGA-AO-A0JM-01A","TCGA-BH-A18S-01A","TCGA-A8-A08C-01A","TCGA-B6-A0I9-01A","TCGA-E9-A1RB-01A","TCGA-AR-A1AO-01A","TCGA-E2-A108-01A","TCGA-BH-A0H0-01A","TCGA-A8-A08S-01A","TCGA-A8-A094-01A","TCGA-BH-A1FL-11A","TCGA-AN-A0XL-01A","TCGA-C8-A9FZ-01A","TCGA-BH-A1ES-01A","TCGA-C8-A12M-01A","TCGA-AR-A0TP-01A","TCGA-AR-A0U1-01A","TCGA-E9-A243-01A","TCGA-GM-A2DO-01A","TCGA-E2-A1IG-01A","TCGA-A2-A0SW-01A","TCGA-A8-A09D-01A","TCGA-BH-A1FD-01A","TCGA-E2-A2P6-01A","TCGA-A2-A0D4-01A","TCGA-EW-A1IZ-01A","TCGA-BH-A0DK-01A","TCGA-LL-A441-01A","TCGA-BH-A0HP-01A","TCGA-A8-A09T-01A","TCGA-A2-A0CS-01A","TCGA-E2-A1LB-11A","TCGA-BH-A5IZ-11A","TCGA-B6-A0RT-01A","TCGA-AO-A03P-01A","TCGA-BH-A18J-11A","TCGA-AR-A256-01A","TCGA-D8-A1JP-01A","TCGA-GM-A3XN-01A","TCGA-AR-A24U-01A","TCGA-AO-A125-01A","TCGA-E9-A1N4-11A","TCGA-BH-A1FE-06A","TCGA-A7-A3IY-01A","TCGA-AC-A3W5-01A","TCGA-A8-A06P-01A","TCGA-E9-A1ND-11A","TCGA-E9-A1RI-11A","TCGA-AO-A12E-01A","TCGA-BH-A0H7-11A","TCGA-A2-A04P-01A","TCGA-C8-A26X-01A","TCGA-BH-A0AW-01A","TCGA-BH-A0B8-01A","TCGA-B6-A0WZ-01A","TCGA-S3-AA10-01A","TCGA-UL-AAZ6-01A","TCGA-D8-A1XA-01A","TCGA-AO-A1KT-01A","TCGA-A2-A0EU-01A","TCGA-A7-A4SC-11A","TCGA-A1-A0SD-01A","TCGA-EW-A1PB-01A","TCGA-A8-A082-01A","TCGA-D8-A1XQ-01A","TCGA-D8-A1Y2-01A","TCGA-E2-A1B5-11A","TCGA-E9-A5UO-01A","TCGA-A7-A0CE-11A","TCGA-A2-A4S0-01A","TCGA-AC-A6IW-01A","TCGA-A8-A08B-01A","TCGA-AO-A0JL-01A","TCGA-BH-A18R-01A","TCGA-B6-A0I8-01A","TCGA-E9-A1RA-01A","TCGA-AR-A1AN-01A","TCGA-AC-A5XS-01A","TCGA-E2-A107-01A","TCGA-B6-A40C-01A","TCGA-A8-A093-01A","TCGA-GM-A2DN-01A","TCGA-C8-A12L-01A","TCGA-A8-A08R-01A","TCGA-AR-A0U0-01A","TCGA-B6-A0IH-01A","TCGA-AC-A6IX-06A","TCGA-E9-A6HE-01A","TCGA-E2-A1IF-01A","TCGA-A2-A0SV-01A","TCGA-A2-A0T7-01A","TCGA-A8-A09C-01A","TCGA-AR-A2LR-01A","TCGA-E9-A5FL-01A","TCGA-BH-A1FC-01A","TCGA-B6-A2IU-01A","TCGA-E2-A2P5-01A","TCGA-A2-A0D3-01A","TCGA-A2-A0CR-01A","TCGA-A7-A26J-01A","TCGA-A7-A26J-01B","TCGA-BH-A0HO-01A","TCGA-LL-A440-01A","TCGA-BH-A1ES-06A","TCGA-D8-A27N-01A","TCGA-A7-A2KD-01A","TCGA-BH-A0C0-11A","TCGA-EW-A1IY-01A","TCGA-C8-A1HG-01A","TCGA-E2-A15M-01A","TCGA-B6-A0RS-01A","TCGA-AO-A03O-01A","TCGA-BH-A0DZ-01A","TCGA-AR-A255-01A","TCGA-AR-A24T-01A","TCGA-AO-A124-01A","TCGA-BH-A0BO-11A","TCGA-E2-A9RU-01A","TCGA-A7-A13G-11A","TCGA-A8-A06O-01A","TCGA-OL-A66P-01A","TCGA-A2-A0YM-01A","TCGA-AO-A12D-01A","TCGA-E9-A1RH-11A","TCGA-AC-A2BK-11A","TCGA-B6-A0WY-01A","TCGA-C8-A26W-01A","TCGA-EW-A1P1-01A","TCGA-AN-A0FD-01A","TCGA-BH-A0AV-01A","TCGA-LL-A7SZ-01A","TCGA-BH-A0B7-01A","TCGA-BH-A1EY-11B","TCGA-C8-A278-01A","TCGA-AO-A1KS-01A","TCGA-A2-A0ET-01A","TCGA-BH-A0BG-01A","TCGA-EW-A1PA-01A","TCGA-E2-A1L9-01A","TCGA-AN-A0FT-01A","TCGA-A8-A07P-01A","TCGA-BH-A0WA-01A","TCGA-D8-A1Y1-01A","TCGA-BH-A1FJ-11B","TCGA-A8-A081-01A","TCGA-A2-A3Y0-01A","TCGA-E9-A1R0-01A","TCGA-D8-A143-01A","TCGA-BH-A0DQ-11A","TCGA-BH-A0BW-01A","TCGA-AC-A6IV-01A","TCGA-E2-A1LI-01A","TCGA-A8-A08A-01A","TCGA-BH-A18Q-01A","TCGA-B6-A402-01A","TCGA-AC-A23H-11A","TCGA-BH-AB28-01A","TCGA-E2-A106-01A","TCGA-AR-A1AM-01A","TCGA-B6-A40B-01A","TCGA-A8-A092-01A","TCGA-C8-A12K-01A","TCGA-GM-A2DM-01A","TCGA-BH-A1F2-01A","TCGA-B6-A0IG-01A","TCGA-E2-A10F-01A","TCGA-E2-A1IE-01A","TCGA-A2-A0SU-01A","TCGA-A2-A0T6-01A","TCGA-A8-A09B-01A","TCGA-AR-A2LQ-01A","TCGA-BH-A1FB-01A","TCGA-E9-A5FK-01A","TCGA-E9-A24A-01A","TCGA-AQ-A1H3-01A","TCGA-A2-A0D2-01A","TCGA-A2-A0CQ-01A","TCGA-BH-A0DI-01A","TCGA-A7-A26I-01A","TCGA-BH-A0HN-01A","TCGA-A8-A09R-01A","TCGA-E2-A1IU-01A","TCGA-D8-A27M-01A","TCGA-A7-A26I-01B","TCGA-BH-A1FR-01A","TCGA-EW-A1IX-01A","TCGA-C8-A1HF-01A","TCGA-AC-A62Y-01A","TCGA-E2-A15L-01A","TCGA-A7-A56D-11A","TCGA-AO-A03N-01B","TCGA-HN-A2OB-01A","TCGA-AR-A254-01A","TCGA-GM-A3XL-01A","TCGA-D8-A1JN-01A","TCGA-AR-A24S-01A","TCGA-E9-A1R7-11A","TCGA-AN-A0AM-01A","TCGA-A7-A13F-11A","TCGA-A8-A06N-01A","TCGA-A2-A0YL-01A","TCGA-OL-A66O-01A","TCGA-AO-A12C-01A","TCGA-BH-A0H5-11A","TCGA-A2-A04N-01A","TCGA-AC-A2FO-11A","TCGA-B6-A0WX-01A","TCGA-BH-A0B6-01A","TCGA-EW-A1P0-01A","TCGA-C8-A26V-01A","TCGA-BH-A0AU-01A","TCGA-BH-A1EX-11A","TCGA-E2-A153-11A","TCGA-AO-A1KR-01A","TCGA-A2-A0ES-01A","TCGA-BH-A0BF-01A","TCGA-A1-A0SB-01A","TCGA-E2-A1L8-01A","TCGA-A8-A07O-01A","TCGA-BH-A204-11A","TCGA-AN-A0FS-01A","TCGA-D8-A1XO-01A","TCGA-D8-A1Y0-01A","TCGA-BH-A0E1-11A","TCGA-BH-A0DP-11A","TCGA-LL-A9Q3-01A","TCGA-D8-A142-01A","TCGA-BH-A0BV-01A","TCGA-BH-A0C7-01B","TCGA-E2-A1LH-01A","TCGA-B6-A401-01A","TCGA-AO-A0JJ-01A","TCGA-BH-A18P-01A","TCGA-BH-A0C7-01A","TCGA-LL-A6FR-01A","TCGA-E2-A1BC-11A","TCGA-D8-A73X-01A","TCGA-B6-A0I6-01A","TCGA-E2-A105-01A","TCGA-AR-A1AL-01A","TCGA-AC-A23G-11A","TCGA-BH-A8G0-01A","TCGA-AC-A2FG-01A","TCGA-A8-A091-01A","TCGA-GM-A2DL-01A","TCGA-EW-A6SD-01A","TCGA-BH-A5J0-01A","TCGA-A8-A08P-01A","TCGA-E2-A10E-01A","TCGA-A7-A4SA-11A","TCGA-A2-A0T5-01A","TCGA-A2-A0ST-01A","TCGA-A8-A09A-01A","TCGA-C8-A12Z-01A","TCGA-GI-A2C9-11A","TCGA-OL-A97C-01A","TCGA-E2-A14Z-01A","TCGA-AQ-A1H2-01A","TCGA-A2-A0D1-01A","TCGA-A2-A0CP-01A","TCGA-BH-A0DH-01A","TCGA-A7-A26H-01A","TCGA-EW-A1IW-01A","TCGA-A8-A09Q-01A","TCGA-D8-A27L-01A","TCGA-BH-A0BM-11A","TCGA-AC-A5EI-01A","TCGA-C8-A1HE-01A","TCGA-AC-A62X-01A","TCGA-B6-A0RQ-01A","TCGA-E2-A15K-01A","TCGA-E2-A1AZ-01A","TCGA-BH-A0E9-01B","TCGA-D8-A1JM-01A","TCGA-BH-A0DX-01A","TCGA-AR-A24R-01A","TCGA-AO-A03M-01B","TCGA-3C-AAAU-01A"],"data":{"req":{"position":null,"values":[[0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,null,0,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,1,2,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0]],"mean":[null]},"codes":["Primary Tumor","Solid Tissue Normal","Metastatic",""],"status":"loaded","avg":{"mean":[0.13717848791894],"median":[0]}},"cohort":{"name":"GDC TCGA Breast Cancer (BRCA)","sampleFilter":null},"fieldLabel":"sample_type.samples"}"""
try:
    J = json.loads(DE_params)
except: # empty form
    display(Markdown("<span style=\"background-color:#f2dede\">Error! No input.</span>"))
    sleep(10)
    raise SystemExit(1)
expr_dataset_name = J['preferredExpression']['name']
xena_host = J['preferredExpression']['host']
probemap_name = J['preferredExpression'].get('probemap')
unit = J['preferredExpression'].get('unit')
expr_data_filename = xenaFileDownloadLink(xena_host, expr_dataset_name)
probemap_filename = xenaFileDownloadLink(xena_host, probemap_name)
samples = J["samples"]
values = J["data"]["req"]["values"][0]
codes = J["data"]["codes"]
logPattern = re.compile("^log", flags=re.IGNORECASE)
patternPseudoCount = re.compile( "\+\s*[0-9]+(\.[0-9]+)?\s*\)")
patternNumber = re.compile("[0-9]+(\.[0-9]+)?")
logData = unit and re.search(logPattern, unit)
pseudocount = (unit and re.search(patternPseudoCount, unit) and float(re.search(patternNumber, re.search(patternPseudoCount, unit).group(0)).group(0))) or 0
assert(len(samples) == len(values))

case_group = ['Metastatic']
control_group = ['Primary Tumor']
interactive_plot = True
filter_genes = False
low_expression_threshold =0.3
nr_genes = 2500
logCPM_normalization= False
log_normalization= False
z_normalization= True
q_normalization= False
save_intermediate = False
diff_gex_method = "limma_voom"
diff_gex_plot_method = "volcano"
pvalue_threshold = 0.05
logfc_threshold = 1.5
gene_topk = 500
enrichr_libraries = ['Gene Ontology', 'Pathway']
nr_genesets = 15
enrichr_success = True
small_molecule_method = "L1000FWD"
l1000_topk = 500
nr_drugs = 7

warnings.filterwarnings('ignore')
random.seed(0)
pandas2ri.activate()
if interactive_plot == True:
    plot_type='interactive'
else:
    plot_type='static'
chart_studio.tools.set_credentials_file(username='mjjeon', api_key='v0rpMa6lhST28Sq7XqtM')
results = {}
table_counter = 1
figure_counter = 1

Build Subgroup 1 vs. Subgroup 2

meta_df = build_meta_df(samples, values, codes)
meta_id_column_name, meta_class_column_name = meta_df.columns
meta_subgroup_column_name = "subgroup"

# build case vs. control subgroups
error =  check_subgroups (control_group, case_group)
if error:
    display(Markdown("<span style=\"background-color:#f2dede\">Error! {}.</span>".format(error)))
    sleep(10)
    raise SystemExit(1)

case_subgroup_name = '+'.join(case_group).replace("/","_")
case_subgroup_name = re.sub(r'\W+', '_', case_subgroup_name) # all nonalphanum change to _
control_subgroup_name = '+'.join(control_group)
control_subgroup_name = re.sub(r'\W+', '_', control_subgroup_name) # all nonalphanum change to _
meta_df[meta_subgroup_column_name] = np.where(np.isin(meta_df[meta_class_column_name], case_group), case_subgroup_name, np.where(np.isin(meta_df[meta_class_column_name], control_group), control_subgroup_name,''))
subgroups = [control_subgroup_name, case_subgroup_name] # CONTROL first, CASE second
meta_df = meta_df[meta_df[meta_subgroup_column_name]!='']

table_counter = display_object(table_counter, "Sample size for each subgroup. The table displays the number of samples in each subgroup.", meta_df.groupby(meta_subgroup_column_name)[meta_subgroup_column_name].count().to_frame(), istable=True)

n_case = len(meta_df[meta_df[meta_subgroup_column_name] == case_subgroup_name])
n_control  = len(meta_df[meta_df[meta_subgroup_column_name] == control_subgroup_name])
if n_case < 2 or n_control < 2:
    display(Markdown("<span style=\"background-color:#f2dede\">Error! Each subgroup needs to have at least 2 samples with gene expression data. \"{}\" group has {} samples. \"{}\" group has {} samples.</span>".format(case_subgroup_name, n_case, control_subgroup_name, n_control)))
    print ("Error!")
    sleep(10)
    raise SystemExit(1)

	subgroup
subgroup 	
Metastatic 	7
Primary_Tumor 	1114

Table 1. Sample size for each subgroup. The table displays the number of samples in each subgroup.

# set memory, runtime and sample limit for the analysis
website = False
def sample_exceeded(sample_size, max_sample):
    display(Markdown("<span style=\"background-color:#f2dede\">There are {} samples in the analysis, which has exceeded the {} sample limit on this website. You can use Xena to filter down the samples first.</span>".format(sample_size, max_sample)))
    print ("Error!")
    sleep(10)
    raise SystemExit(1)

def time_exceeded(signo, frame): 
    display(Markdown("**The analysis is terminated because it has exceeded the maximum time limit.**"))
    print ("Error!")
    sleep(10)
    raise SystemExit(1)
    
def set_resource_limit(max_time, max_mem):
    soft, hard = resource.getrlimit(resource.RLIMIT_CPU)
    resource.setrlimit(resource.RLIMIT_CPU, (max_time, hard))
    soft, hard = resource.getrlimit(resource.RLIMIT_AS)
    resource.setrlimit(resource.RLIMIT_AS, (max_mem, hard))
    signal.signal(signal.SIGXCPU, time_exceeded) 

if os.path.exists("../../analysis.xenahubs.net"):
    website = True

if website:
    max_time = 60 * 20 # max run time is 20 min
    max_mem = 19.9 * 1000 * 1000 * 1000 # max memmory allocated 16GB
    max_sample = 2000 # max sample size 2000 
    set_resource_limit(max_time, max_mem)

    # total number of samples in subgroups
    if len(meta_df) > max_sample:
        sample_exceeded(len(meta_df), max_sample)

Load dataset

# Downloading expr data file
try:
    expr_data_filename = find_remote_file(expr_data_filename)
except:
    print(f"Error! Gene expression file not found at '{expr_data_filename}'")
    sleep(10)
    raise SystemExit(1)

print("Downloading expression dataset ... Large dataset will take longer.")
buffer = smart_open.smart_open(expr_data_filename,'r')
expr_df = parse_xena_expr(buffer, meta_df[meta_id_column_name].to_list())
print("Download of expression dataset complete")

# display expr table
table_counter = display_object(table_counter, "Gene expression data. The table displays the input gene expression dataset. Rows represent genes, columns represent samples, and values show the gene expression level.", expr_df, istable=True)

# display meta data table
table_counter = display_object(table_counter, "Metadata. The table displays the metadata associated with the samples in the gene expression dataset. Rows represent samples, columns represent metadata categories and subgroups.", meta_df, istable=True)

	TCGA-E9-A1NI-01A 	TCGA-A1-A0SP-01A 	TCGA-E2-A14T-01A 	TCGA-AR-A24O-01A 	TCGA-A8-A09K-01A 	TCGA-OL-A5RY-01A 	TCGA-BH-A0DG-01A 	TCGA-B6-A0I9-01A 	TCGA-E9-A1RB-01A 	TCGA-A2-A0CP-01A 	... 	TCGA-E2-A1L6-01A 	TCGA-BH-A1EV-01A 	TCGA-AR-A1AY-01A 	TCGA-A8-A0A7-01A 	TCGA-BH-A0GY-01A 	TCGA-B6-A0RN-01A 	TCGA-A8-A09W-01A 	TCGA-E9-A1R5-01A 	TCGA-B6-A409-01A 	TCGA-AR-A2LL-01A
ENSG00000242268.2 	10.560320 	0.000000 	0.000000 	11.233491 	0.000000 	0.000000 	0.000000 	8.857158 	0.000000 	10.939829 	... 	8.748238 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	8.872373 	0.000000 	0.000000
ENSG00000270112.3 	8.299506 	6.226075 	0.000000 	6.082997 	6.417079 	0.000000 	0.000000 	8.815198 	6.699574 	7.100240 	... 	6.907539 	7.899623 	0.000000 	7.306528 	6.519448 	0.000000 	7.530339 	0.000000 	0.000000 	0.000000
ENSG00000167578.15 	16.380497 	15.865669 	17.017546 	15.503184 	16.378228 	16.357730 	16.021494 	16.360135 	15.138009 	16.599760 	... 	16.268045 	15.352178 	15.127879 	16.266192 	15.514863 	15.844864 	14.911990 	15.426024 	15.568014 	15.976457
ENSG00000273842.1 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000
ENSG00000078237.5 	16.488881 	18.613452 	16.055137 	16.193758 	15.863342 	16.876560 	16.184573 	15.938902 	16.523109 	15.837713 	... 	16.619144 	15.272531 	16.887184 	16.750203 	16.821386 	15.595218 	16.431595 	16.624706 	14.364206 	16.014735
... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	...
ENSG00000105063.17 	18.051716 	18.340583 	18.688927 	17.603127 	18.354067 	18.273037 	18.246108 	18.652595 	17.683856 	18.254698 	... 	17.866304 	18.046812 	18.276665 	18.887956 	20.467040 	17.864143 	17.788430 	17.964497 	17.865765 	18.314785
ENSG00000231119.2 	12.297813 	10.877471 	10.094804 	12.085556 	11.601107 	11.814682 	10.708420 	11.412162 	11.940986 	11.912095 	... 	11.919512 	13.536753 	11.939618 	11.704814 	9.006549 	10.923092 	12.666698 	11.327906 	12.328712 	10.980112
ENSG00000280861.1 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000
ENSG00000123685.7 	13.532379 	15.150028 	11.402406 	13.500652 	11.403502 	15.644650 	13.465381 	12.701622 	12.578551 	13.705644 	... 	13.020507 	12.394208 	12.499193 	14.382787 	13.485259 	12.861408 	12.830439 	12.427408 	15.138635 	12.430586
ENSG00000181518.3 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	7.844549 	0.000000 	8.139131 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000

60483 rows × 1104 columns

Table 2. Gene expression data. The table displays the input gene expression dataset. Rows represent genes, columns represent samples, and values show the gene expression level.
	sample 	category 	subgroup
0 	TCGA-C8-A3M8-01A 	Primary Tumor 	Primary_Tumor
1 	TCGA-BH-A0EI-01A 	Primary Tumor 	Primary_Tumor
2 	TCGA-AN-A0AL-01A 	Primary Tumor 	Primary_Tumor
3 	TCGA-A2-A0YK-01A 	Primary Tumor 	Primary_Tumor
4 	TCGA-OL-A66N-01A 	Primary Tumor 	Primary_Tumor
... 	... 	... 	...
1279 	TCGA-D8-A1JM-01A 	Primary Tumor 	Primary_Tumor
1280 	TCGA-BH-A0DX-01A 	Primary Tumor 	Primary_Tumor
1281 	TCGA-AR-A24R-01A 	Primary Tumor 	Primary_Tumor
1282 	TCGA-AO-A03M-01B 	Primary Tumor 	Primary_Tumor
1283 	TCGA-3C-AAAU-01A 	Primary Tumor 	Primary_Tumor

1121 rows × 3 columns

Table 3. Metadata. The table displays the metadata associated with the samples in the gene expression dataset. Rows represent samples, columns represent metadata categories and subgroups.

Downloading expression dataset ... Large dataset will take longer.
Download of expression dataset complete

# Match samples between the metadata (subgroup column) and the expression datasets
try:
    check_df(meta_df, meta_id_column_name)
except:
    print(f"Error! Column '{meta_id_column_name}' is not in metadata")
try:
    check_df(meta_df, meta_class_column_name)
except:
    print(f"Error! Column '{meta_class_column_name}' is not in metadata")

meta_df = meta_df[meta_df[meta_id_column_name].isin(expr_df.columns)] #filter metadata
expr_df = expr_df.groupby(expr_df.columns, axis=1).mean() # average across duplicated samples, remove sample duplications
expr_df = expr_df.loc[:,meta_df[meta_id_column_name]] #reorder
expr_df = expr_df.groupby(expr_df.index).sum() # add all values from the same gene, remove gene duplications

try:
    assert(meta_df.shape[0]==expr_df.shape[1])
except:
    print("Unexpected! Sample mismatch detected")
    sleep(10)
    raise SystemExit(1)

n_case = len(meta_df[meta_df[meta_subgroup_column_name] == case_subgroup_name])
n_control  = len(meta_df[meta_df[meta_subgroup_column_name] == control_subgroup_name])
if n_case < 2 or n_control < 2:
    display(Markdown("<span style=\"background-color:#f2dede\">Error! Each subgroup needs to have at least 2 samples with gene expression data. \"{}\" group has {} samples with gene expression data. \"{}\" group has {} samples with gene expression data.</span>".format(case_subgroup_name, n_case, control_subgroup_name, n_control)))
    print ("Error!")
    sleep(10)
    raise SystemExit(1)

# convert non-HUGO probe_level expr_df to hugo-gene-level expr_df
to_hugo = False
if probemap_filename:
    try:
        probemap_filename = find_remote_file(probemap_filename)
        probemap_buffer = smart_open.smart_open(probemap_filename,'r')
        probemap_df = pd.read_csv(probemap_buffer, index_col=0, sep="\t", compression="infer", header=None, comment="#")
        if check_probe_level(probemap_df) != "HUGO":
            # convert expr_df to hugo_gene_level expr_df
            expr_df = convert_to_hugo(expr_df, probemap_df)
            to_hugo = True
    except:
        print(f"Error! Probemap file not found at '{probemap_filename}'")

dataset = dict()
current_dataset = 'rawdata'
dataset[current_dataset] = expr_df
dataset['dataset_metadata'] = meta_df

# display expression data table - hugo converted
if (to_hugo):
    table_counter = display_object(table_counter, "Gene expression data. The table displays the quantified gene expression dataset after converting input data to using hugo gene names. Rows represent genes, columns represent samples, and values show the gene expression level.", dataset[current_dataset], istable=True)
    # display(create_download_link(dataset[current_dataset], filename="gene_level_expr.csv"))

	TCGA-C8-A3M8-01A 	TCGA-BH-A0EI-01A 	TCGA-AN-A0AL-01A 	TCGA-A2-A0YK-01A 	TCGA-OL-A66N-01A 	TCGA-AO-A12B-01A 	TCGA-A2-A1FZ-01A 	TCGA-UU-A93S-01A 	TCGA-B6-A0WW-01A 	TCGA-A7-A5ZX-01A 	... 	TCGA-AC-A62X-01A 	TCGA-B6-A0RQ-01A 	TCGA-E2-A15K-01A 	TCGA-E2-A1AZ-01A 	TCGA-BH-A0E9-01B 	TCGA-D8-A1JM-01A 	TCGA-BH-A0DX-01A 	TCGA-AR-A24R-01A 	TCGA-AO-A03M-01B 	TCGA-3C-AAAU-01A
5S_rRNA 	1.867257 	1.872948 	1.974830 	2.518917 	1.023758 	0.985740 	0.947198 	0.491922 	1.072683 	1.986096 	... 	0.000000 	1.919272 	3.351866 	1.985873 	3.169675 	1.391565 	1.851285 	1.985702 	1.363638 	2.886199
5_8S_rRNA 	5.418667 	0.000000 	0.000000 	5.597421 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000
7SK 	1.660629 	0.000000 	0.000000 	0.863353 	0.000000 	0.000000 	0.000000 	0.874313 	0.000000 	0.000000 	... 	0.986325 	0.000000 	0.000000 	0.000000 	0.783775 	0.775320 	0.000000 	0.000000 	0.000000 	0.786664
A1BG 	11.817366 	11.118925 	10.058700 	11.562147 	11.847815 	11.258244 	11.798257 	12.821678 	11.514791 	12.750292 	... 	8.415967 	11.933114 	10.960456 	12.344989 	12.346224 	9.345724 	11.677738 	11.190192 	12.055686 	12.798781
A1BG-AS1 	14.160515 	15.295006 	13.210114 	14.587070 	15.207012 	14.698621 	14.730635 	14.587641 	14.204646 	15.238286 	... 	12.517292 	15.067243 	14.802057 	14.581325 	15.347455 	12.592006 	14.339070 	15.031892 	16.186492 	14.939557
... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	...
snoZ40 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000
snoZ6 	6.686020 	0.000000 	0.000000 	3.053410 	3.396667 	0.000000 	0.000000 	3.357864 	3.813366 	0.000000 	... 	0.000000 	0.000000 	3.490496 	0.000000 	3.294585 	3.020741 	0.000000 	0.000000 	2.971991 	3.553963
snosnR66 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	... 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000 	0.000000
uc_338 	4.161500 	3.066185 	1.118602 	3.496559 	1.659465 	1.414569 	2.902736 	0.759520 	1.853421 	1.884013 	... 	1.362002 	2.607453 	2.205959 	2.314837 	3.224037 	1.919536 	2.255175 	3.295632 	2.267329 	2.125074
yR211F11.2 	8.907572 	0.000000 	0.000000 	0.000000 	9.637274 	0.000000 	10.499424 	0.000000 	0.000000 	9.452718 	... 	9.616651 	0.000000 	0.000000 	0.000000 	11.549504 	0.000000 	9.380039 	0.000000 	0.000000 	0.000000

58387 rows × 1104 columns

Table 4. Gene expression data. The table displays the quantified gene expression dataset after converting input data to using hugo gene names. Rows represent genes, columns represent samples, and values show the gene expression level.
Normalize gene expression data

Normalization methods ( Z normalization, ) will be applied to convert raw read counts into informative measures of gene expression and remove factors that affect the analysis.

dataset, normalization = normalize(dataset, current_dataset, False, False, True, False)
table_counter = display_object(table_counter, "Normalized data. The table displays the expression values after normalization.", dataset[normalization], istable=True)

	TCGA-C8-A3M8-01A 	TCGA-BH-A0EI-01A 	TCGA-AN-A0AL-01A 	TCGA-A2-A0YK-01A 	TCGA-OL-A66N-01A 	TCGA-AO-A12B-01A 	TCGA-A2-A1FZ-01A 	TCGA-UU-A93S-01A 	TCGA-B6-A0WW-01A 	TCGA-A7-A5ZX-01A 	... 	TCGA-AC-A62X-01A 	TCGA-B6-A0RQ-01A 	TCGA-E2-A15K-01A 	TCGA-E2-A1AZ-01A 	TCGA-BH-A0E9-01B 	TCGA-D8-A1JM-01A 	TCGA-BH-A0DX-01A 	TCGA-AR-A24R-01A 	TCGA-AO-A03M-01B 	TCGA-3C-AAAU-01A
5S_rRNA 	0.051086 	0.057942 	0.180672 	0.836098 	-0.965021 	-1.010819 	-1.057249 	-1.605689 	-0.906085 	0.194244 	... 	-2.198275 	0.113745 	1.839497 	0.193975 	1.620023 	-0.521949 	0.031845 	0.193769 	-0.555591 	1.278539
5_8S_rRNA 	2.617803 	-0.303309 	-0.303309 	2.714167 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	... 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309 	-0.303309
7SK 	0.997388 	-0.679132 	-0.679132 	0.192483 	-0.679132 	-0.679132 	-0.679132 	0.203548 	-0.679132 	-0.679132 	... 	0.316632 	-0.679132 	-0.679132 	-0.679132 	0.112143 	0.103608 	-0.679132 	-0.679132 	-0.679132 	0.115060
A1BG 	0.316902 	-0.389148 	-1.460922 	0.058903 	0.347683 	-0.248311 	0.297585 	1.332155 	0.011031 	1.259991 	... 	-3.121551 	0.433911 	-0.549343 	0.850273 	0.851522 	-2.181666 	0.175753 	-0.317104 	0.557818 	1.309008
A1BG-AS1 	-0.550525 	0.891083 	-1.758208 	-0.008498 	0.779269 	0.133252 	0.173932 	-0.007772 	-0.494447 	0.819009 	... 	-2.638583 	0.601663 	0.264689 	-0.015798 	0.957731 	-2.543644 	-0.323634 	0.556743 	2.023903 	0.439412
... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	...
snoZ40 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	... 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049 	-0.052049
snoZ6 	2.246293 	-1.022142 	-1.022142 	0.470505 	0.638305 	-1.022142 	-1.022142 	0.619337 	0.842007 	-1.022142 	... 	-1.022142 	-1.022142 	0.684173 	-1.022142 	0.588403 	0.454536 	-1.022142 	-1.022142 	0.430704 	0.715199
snosnR66 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	... 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183 	-0.060183
uc_338 	1.527132 	0.523509 	-1.261037 	0.917855 	-0.765451 	-0.989847 	0.373743 	-1.590060 	-0.587732 	-0.559701 	... 	-1.038013 	0.103179 	-0.264705 	-0.164942 	0.668147 	-0.527151 	-0.219610 	0.733748 	-0.208473 	-0.338819
yR211F11.2 	1.152693 	-0.717530 	-0.717530 	-0.717530 	1.305900 	-0.717530 	1.486916 	-0.717530 	-0.717530 	1.267151 	... 	1.301570 	-0.717530 	-0.717530 	-0.717530 	1.707389 	-0.717530 	1.251891 	-0.717530 	-0.717530 	-0.717530

56473 rows × 1104 columns

Table 5. Normalized data. The table displays the expression values after normalization.
QC plot: Total gene expression analysis

Total gene expression analysis calculates and displays the total gene expression for each sample in the gene expression dataset, facilitating assessment of the overall quality of the data.

meta_df['sum'] = expr_df.sum().tolist()
fig = px.bar(meta_df.sort_values(by='sum'), x=meta_id_column_name, y='sum')

if plot_type=='interactive':
        plotly.offline.iplot(fig)
else:
    py.image.ishow(fig)
figure_counter = display_object(figure_counter, "The total gene expression for each sample. The figure contains an interactive bar chart which displays the total gene expression (sum) mapped to each sample in the dataset. Additional information for each sample is available by hovering over the bars.", istable=False)

Figure 1. The total gene expression for each sample. The figure contains an interactive bar chart which displays the total gene expression (sum) mapped to each sample in the dataset. Additional information for each sample is available by hovering over the bars.
Visualize Samples

Principal Component Analysis (PCA) (Clark et al. 2011) is a statistical technique used to identify global patterns in high-dimensional datasets. It is commonly used to explore the similarity of biological samples in gene expression datasets. To achieve this, gene expression values are transformed into Principal Components (PCs), a set of linearly uncorrelated features which represent the most relevant sources of variance in the data, and subsequently visualized using a scatter plot.

method = "PCA"
# Run analysis
results[method] = run_dimension_reduction(dataset=dataset, meta_id_column_name=meta_id_column_name, method=method,\
                         nr_genes=nr_genes, normalization=normalization, plot_type=plot_type)
# Display results
figure_counter = plot_samples(results[method], meta_id_column_name=meta_id_column_name, meta_class_column_name=meta_class_column_name, counter=figure_counter)

Figure 2. 3D PCA plot for samples using 2500 genes having largest variance. The figure displays an interactive, three-dimensional scatter plot of the data. Each point represents an gene expression sample. Samples with similar gene expression profiles are closer in the three-dimensional space. If provided, sample groups are indicated using different colors, allowing for easier interpretation of the results.
limma_voom Differential Gene Expression

Gene expression signatures are alterations in the patterns of gene expression that occur as a result of cellular perturbations such as drug treatments, gene knock-downs or diseases. They can be quantified using differential gene expression (DGE) methods (Ritchie et al. 2015, Clark et al. 2014), which compare gene expression between two groups of samples to identify genes whose expression is significantly altered in the perturbation.

signatures = get_signatures(subgroups, dataset, normalization, diff_gex_method, meta_subgroup_column_name, meta_id_column_name, filter_genes, logData, pseudocount)

for label, signature in signatures.items():
    table_counter = display_object(table_counter, "Differentially expressed genes between {} using {}. The figure displays a browsable table containing the gene expression signature generated from a differential gene expression analysis. Every row of the table represents a gene; the columns display the estimated measures of differential expression.".format(label, diff_gex_method), signature, istable=True)
    display(create_download_link(signature, filename="DEG_results_{}.csv".format(label)))

	logFC 	AveExpr 	t 	P.Value 	adj.P.Val 	B
LINC00418 	3.751774 	-13.616134 	9.199573 	1.739326e-19 	2.375702e-15 	32.604485
AC016903.2 	4.558745 	-13.515221 	8.095006 	1.498606e-15 	1.023454e-11 	24.064681
SNX18P27 	6.777762 	-13.132480 	7.403538 	2.620481e-13 	8.948122e-10 	18.982268
OR8H2 	2.919139 	-13.601908 	7.319211 	4.785895e-13 	1.376197e-09 	18.743774
RNU6-21P 	3.646878 	-13.553817 	6.970061 	5.433286e-12 	1.413560e-08 	16.465859
... 	... 	... 	... 	... 	... 	...
SFRP2 	-6.158932 	9.001311 	-8.861047 	3.102060e-18 	2.824684e-14 	29.865944
GRP 	-11.427200 	2.675775 	-9.055715 	5.983093e-19 	6.537725e-15 	32.258468
MMP3 	-8.647920 	3.391939 	-9.350312 	4.683877e-20 	8.530121e-16 	34.775130
RP11-401O9.3 	-8.630205 	0.816783 	-9.819060 	7.077509e-22 	1.933399e-17 	38.335237
RP11-401O9.4 	-11.813602 	1.504737 	-12.495163 	1.307122e-33 	7.141460e-29 	64.619294

54635 rows × 6 columns

Table 6. Differentially expressed genes between Metastatic vs. Primary_Tumor using limma_voom. The figure displays a browsable table containing the gene expression signature generated from a differential gene expression analysis. Every row of the table represents a gene; the columns display the estimated measures of differential expression.
Download CSV file: DEG_results_Metastatic vs. Primary_Tumor.csv

Metastatic vs. Primary_Tumor
Info. Log transformed data. Base 2 exponentiation is applied

results['volcano_plot'] = {}
# Loop through signatures
for label, signature in signatures.items():
    results['volcano_plot'][label] = run_volcano(signature, label, dataset, pvalue_threshold, logfc_threshold, plot_type)
    plot_volcano(results['volcano_plot'][label])
    figure_counter = display_object(figure_counter, "Volcano plot for {}. The figure contains an interactive scatter plot which displays the log2-fold changes and statistical significance of each gene calculated by performing a differential gene expression analysis. Genes with logFC > {} and p-value < {} in red and genes with logFC < -{} and p-value < {} in blue. Additional information for each gene is available by hovering over it.".format(label, logfc_threshold, pvalue_threshold, logfc_threshold, pvalue_threshold), istable=False)

Figure 3. Volcano plot for Metastatic vs. Primary_Tumor. The figure contains an interactive scatter plot which displays the log2-fold changes and statistical significance of each gene calculated by performing a differential gene expression analysis. Genes with logFC > 1.5 and p-value < 0.05 in red and genes with logFC < -1.5 and p-value < 0.05 in blue. Additional information for each gene is available by hovering over it.
Enrichment Analysis using Enrichr

Enrichment analysis is a statistical procedure used to identify biological terms which are over-represented in a given gene set. These include signaling pathways, molecular functions, diseases, and a wide variety of other biological terms obtained by integrating prior knowledge of gene function from multiple resources. Enrichr (Kuleshov et al. 2016) is a web-based application which allows users to perform enrichment analysis using a large collection of gene-set libraries and various interactive approaches to display enrichment results.

# Loop through signatures
results = {}
results['enrichr']= {}
enrichr_success = True
if diff_gex_method == "characteristic_direction":
    fc_colname = "CD-coefficient"
    sort_genes_by = "CD-coefficient"
    up_ascending = False
    down_ascending = True
elif diff_gex_method == "limma" or diff_gex_method == "limma_voom":
    fc_colname = "logFC"
    sort_genes_by = "t"
    up_ascending = False
    down_ascending = True
elif diff_gex_method == "edgeR":
    fc_colname = "logFC"
    sort_genes_by = "PValue"
    up_ascending = True
    down_ascending = True
elif diff_gex_method == "DESeq2":
    fc_colname = "log2FoldChange"
    sort_genes_by = "padj"
    up_ascending = True
    down_ascending = True
for label, signature in signatures.items():
    # Run analysis
    try:
        results['enrichr'][label] = run_enrichr(signature=signature, signature_label=label, fc_colname=fc_colname,geneset_size=gene_topk, sort_genes_by = sort_genes_by, up_ascending=up_ascending, down_ascending = down_ascending)
        display(Markdown("*Enrichment Analysis Result: {} ({}-up)*".format(label, case_subgroup_name)))
        display_link("https://maayanlab.cloud/Enrichr/enrich?dataset={}".format(results['enrichr'][label]["upregulated"]["shortId"]))
        display(Markdown("*Enrichment Analysis Result: {} ({}-down)*".format(label, case_subgroup_name)))
        display_link("https://maayanlab.cloud/Enrichr/enrich?dataset={}".format(results['enrichr'][label]["downregulated"]["shortId"]))
        table_counter = display_object(table_counter, "The table displays links to Enrichr containing the results of enrichment analyses generated by analyzing the up-regulated and down-regulated genes from a differential expression analysis. By clicking on these links, users can interactively explore and download the enrichment results from the Enrichr website.")
    except Exception as e:
        print(f"Enrichr Error! '{e}'")
        print('Skip all pathway enrichment analysis')
        enrichr_success = False

Enrichment Analysis Result: Metastatic vs. Primary_Tumor (Metastatic-up)
https://maayanlab.cloud/Enrichr/enrich?dataset=dd81a9743d597c5b1bbd9ec956cea246

Enrichment Analysis Result: Metastatic vs. Primary_Tumor (Metastatic-down)
https://maayanlab.cloud/Enrichr/enrich?dataset=483a544d9968d4710ae5ea7e084d95e1

Table 7. The table displays links to Enrichr containing the results of enrichment analyses generated by analyzing the up-regulated and down-regulated genes from a differential expression analysis. By clicking on these links, users can interactively explore and download the enrichment results from the Enrichr website.

# GO Enrichment Analysis
if "Gene Ontology" in enrichr_libraries and enrichr_success:    
    results['go_enrichment'] = {}

    for label, signature in signatures.items():
        # Run analysis
        results['go_enrichment'][label] = get_enrichr_results_by_library(results['enrichr'][label], label, library_type='go', version='2018')

    for label, signature in signatures.items():
        # Create dataframe
        enrichment_results = results['go_enrichment'][label]
        enrichment_dataframe = pd.concat([enrichment_results['upregulated'], enrichment_results['downregulated']])

        # Plot barcharts
        libraries = enrichment_dataframe['gene_set_library'].unique()   
        if (len(libraries)):
            display(Markdown("## GO Enrichment Analysis"))
            display(Markdown("Gene Ontology (GO) (Ashburner et al. 2000) is a major bioinformatics initiative aimed at unifying the representation of gene attributes across all species. It contains a large collection of experimentally validated and predicted associations between genes and biological terms. This information can be leveraged by Enrichr to identify the biological processes, molecular functions and cellular components which are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples"))
            
            for gene_set_library in libraries:
                plot_library_barchart(enrichment_results, gene_set_library, enrichment_results['signature_label'], enrichment_results['sort_results_by'], nr_genesets=nr_genesets, plot_type=plot_type) # 10 300
            
            figure_counter = display_object(figure_counter, "Enrichment Analysis Results for {} in Gene Onotology. The figure contains interactive bar charts displaying the results of the Gene Ontology enrichment analysis generated using Enrichr. The x axis indicates the -log10(P-value) for each term. Significant terms are highlighted in bold. Additional information about enrichment results is available by hovering over each bar.".format(label), istable=False)

GO Enrichment Analysis

Gene Ontology (GO) (Ashburner et al. 2000) is a major bioinformatics initiative aimed at unifying the representation of gene attributes across all species. It contains a large collection of experimentally validated and predicted associations between genes and biological terms. This information can be leveraged by Enrichr to identify the biological processes, molecular functions and cellular components which are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples

Figure 4. Enrichment Analysis Results for Metastatic vs. Primary_Tumor in Gene Onotology. The figure contains interactive bar charts displaying the results of the Gene Ontology enrichment analysis generated using Enrichr. The x axis indicates the -log10(P-value) for each term. Significant terms are highlighted in bold. Additional information about enrichment results is available by hovering over each bar.

# Pathway Enrichment Analysis
if "Pathway" in enrichr_libraries and enrichr_success:
    results['pathway_enrichment'] = {}
    for label, signature in signatures.items():
        # Run analysis
        results['pathway_enrichment'][label] = get_enrichr_results_by_library(results['enrichr'][label], label, library_type='pathway')

    for label, signature in signatures.items():
        # Create dataframe
        enrichment_results = results['pathway_enrichment'][label]
        enrichment_dataframe = pd.concat([enrichment_results['upregulated'], enrichment_results['downregulated']])

        # Plot barcharts
        libraries = enrichment_dataframe['gene_set_library'].unique()   
        if (len(libraries)):
            display(Markdown("## Pathway Enrichment Analysis"))
            display(Markdown("Biological pathways are sequences of interactions between biochemical compounds which play a key role in determining cellular behavior. Databases such as KEGG (Kanehisa et al. 2000), Reactome (Croft et al. 2014) and WikiPathways (Kelder et al. 2012) contain a large number of associations between such pathways and genes. This information can be leveraged by Enrichr to identify the biological pathways which are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples."))
        
            for gene_set_library in libraries:
                # Display results
                plot_library_barchart(enrichment_results, gene_set_library, enrichment_results['signature_label'], enrichment_results['sort_results_by'], nr_genesets=nr_genesets, plot_type=plot_type)
        
            figure_counter = display_object(figure_counter, "Enrichment Analysis Results for {} in KEGG Pathways, WikiPathways and Reactome Pathways. The figure contains interactive bar charts displaying the results of the Gene Ontology enrichment analysis generated using Enrichr. The x axis indicates the -log10(P-value) for each term. Significant terms are highlighted in bold. Additional information about enrichment results is available by hovering over each bar.".format(label), istable=False)

Pathway Enrichment Analysis

Biological pathways are sequences of interactions between biochemical compounds which play a key role in determining cellular behavior. Databases such as KEGG (Kanehisa et al. 2000), Reactome (Croft et al. 2014) and WikiPathways (Kelder et al. 2012) contain a large number of associations between such pathways and genes. This information can be leveraged by Enrichr to identify the biological pathways which are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples.

Figure 5. Enrichment Analysis Results for Metastatic vs. Primary_Tumor in KEGG Pathways, WikiPathways and Reactome Pathways. The figure contains interactive bar charts displaying the results of the Gene Ontology enrichment analysis generated using Enrichr. The x axis indicates the -log10(P-value) for each term. Significant terms are highlighted in bold. Additional information about enrichment results is available by hovering over each bar.

# Transcription Factor Enrichment Analysis
if "Transcription Factor" in enrichr_libraries and enrichr_success:
    display(Markdown("## Transcription Factor Enrichment Analysis"))
    display(Markdown("Transcription Factors (TFs) are proteins involved in the transcriptional regulation of gene expression. Databases such as ChEA (Lachmann et al. 2010) and ENCODE (Consortium, 2014) contain a large number of associations between TFs and their transcriptional targets. This information can be leveraged by Enrichr to identify the transcription factors whose targets are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples."))

    # Initialize results
    results['tf_enrichment'] = {}

    # Loop through results
    for label, enrichr_results in results['enrichr'].items():
    #     # Run analysis
        results['tf_enrichment'][label] = get_enrichr_result_tables_by_library(enrichr_results=enrichr_results, signature_label=label)
        table_counter = display_table(results['tf_enrichment'][label], "Transcription Factor", table_counter)

# Kinase Enrichment Analysis
if "Kinase" in enrichr_libraries and enrichr_success:
    display(Markdown("## Kinase Enrichment Analysis"))
    display(Markdown("Protein kinases are enzymes that modify other proteins by chemically adding phosphate groups. Databases such as KEA (Lachmann et al. 2009) contain a large number of associations between kinases and their substrates. This information can be leveraged by Enrichr to identify the protein kinases whose substrates are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples."))

    # Initialize results
    results['kinase_enrichment'] = {}

    # Loop through results
    for label, enrichr_results in results['enrichr'].items():
        # Run analysis
        results['kinase_enrichment'][label] = get_enrichr_result_tables_by_library(enrichr_results=enrichr_results, signature_label=label, library_type="ke")

        # Display results
        table_counter = display_table(results['kinase_enrichment'][label], "Kinase", table_counter)

# miRNA Enrichment Analysis
if "miRNA" in enrichr_libraries and enrichr_success:
    display(Markdown("## miRNA Enrichment Analysis"))
    display(Markdown("microRNAs (miRNAs) are small non-coding RNA molecules which play a key role in the post-transcriptional regulation of gene expression. Databases such as TargetScan (Agarwal et al. 2015) and MiRTarBase (Chou et al. 2016) contain a large number of associations between miRNAs and their targets. This information can be leveraged by Enrichr to identify the miRNAs whose targets are over-represented in the up-regulated and down-regulated genes identified by comparing two groups of samples."))

    results['mirna_enrichment'] = {}

    # Loop through results
    for label, enrichr_results in results['enrichr'].items():
        # Run analysis
        results['mirna_enrichment'][label] = get_enrichr_result_tables_by_library(enrichr_results=enrichr_results, signature_label=label, library_type="mirna")

        # Display results
        table_counter = display_table(results['mirna_enrichment'][label], "miRNA", table_counter)

LINCS L1000 Small Molecule Candidates
L1000FWD Query

The LINCS L1000 dataset is a collection of 1+ million gene expression signatures created from human cell lines treated with over 20,000 small molecules and drugs. This pipeline usees L1000FWD (Wang et al. 2018) to take the differential gene expression signature computed in this pipeline and query the expression signatures in the L1000 dataset for signatures that are either similar or opposite, allowing you to find candidate small molecules and drugs which may mimic or reverse your signature.

# Initialize results
results['l1000fwd'] = {}
# Loop through signatures
try:
    for label, signature in signatures.items():
        display(Markdown("*L1000FWD for {}*".format(label)))
        # Run analysis
        results['l1000fwd'][label] = run_l1000fwd(signature=signature, signature_label=label, nr_genes=l1000_topk)
        # Display results
        table_counter = plot_l1000fwd(results['l1000fwd'][label], counter=table_counter)
except Exception as e:
    print(f"L1000FWD Error! '{e}'")
    print ('Skip analysis')

L1000FWD for Metastatic vs. Primary_Tumor
https://maayanlab.cloud/l1000fwd/vanilla/result/62bcb737c468ed002cd440ec
	Signature ID 	P-value 	FDR 	Z-score 	Combined Score
1 	CPC019_PC3_24H:BRD-K87040771-001-01-2:10 	3.955379e-15 	5.644194e-11 	-1.757741 	25.316413
2 	CPC019_MCF7_24H:BRD-K49553303-001-01-8:10 	6.534971e-15 	6.993889e-11 	-1.769859 	25.105020
3 	CPC011_A549_6H:BRD-K19507340-001-18-9:10 	6.587452e-14 	4.028604e-10 	-1.710302 	22.543975
4 	CPC019_PC3_24H:BRD-K36895979-001-01-1:10 	1.083009e-13 	4.214775e-10 	-1.778693 	23.061408
5 	CPC020_A375_6H:BRD-K93568044-001-24-7:10 	8.927114e-11 	8.492463e-08 	-1.781293 	17.900727
6 	CPC001_VCAP_6H:BRD-K84987553-001-01-1:10 	3.035627e-10 	2.406521e-07 	-1.633259 	15.544951
7 	CPC013_HT29_6H:BRD-K93578426-001-01-2:10 	3.953824e-10 	2.820988e-07 	-1.736424 	16.327562
8 	CPC015_A375_6H:BRD-K28936863-051-18-1:10 	3.953824e-10 	2.820988e-07 	-1.746396 	16.421331
9 	CPC012_HT29_6H:BRD-K10554164-001-01-9:10 	5.499936e-10 	3.225298e-07 	-1.775374 	16.439332
10 	CPC012_HT29_6H:BRD-K41924482-001-01-2:10 	6.018560e-10 	3.426818e-07 	-1.731020 	15.960883
11 	CPC016_NPC_24H:BRD-K81729199-001-01-0:10 	1.770229e-09 	8.420194e-07 	-1.729644 	15.137795
12 	CPC018_MCF7_6H:BRD-K18787491-001-07-8:10 	2.016014e-09 	9.181229e-07 	-1.797789 	15.632688
13 	CPC012_HT29_6H:BRD-A62200266-001-01-5:10 	4.889721e-09 	1.993563e-06 	-1.709387 	14.206227
14 	CPC005_PC3_24H:BRD-K63430059-001-09-9:10 	5.495528e-09 	2.178315e-06 	-1.644357 	13.582372
15 	CPC009_PC3_6H:BRD-A60784279-001-05-6:10 	6.880064e-09 	2.599488e-06 	-1.718695 	14.028691
16 	MUC.CP006_MCF7_6H:BRD-K81418486-001-13-7:3.3333 	8.688318e-09 	3.023888e-06 	-1.829035 	14.743967
17 	CPC009_PC3_6H:BRD-K09416995-001-31-6:10 	1.064738e-08 	3.506182e-06 	-1.689465 	13.469696
18 	CPC004_HCC515_6H:BRD-A69815203-001-05-0:10 	1.292813e-08 	4.099558e-06 	-1.627129 	12.835550
19 	CPC010_PC3_6H:BRD-A19928752-001-07-3:10 	1.687210e-08 	4.986240e-06 	-1.736568 	13.498049
20 	CPC005_MCF7_24H:BRD-K82577285-001-01-7:10 	2.601993e-08 	6.710163e-06 	-1.684339 	12.775194
21 	CPC012_A549_6H:BRD-K10484463-001-06-6:10 	2.811044e-08 	7.162976e-06 	-1.759778 	13.288315
22 	CPC020_PC3_24H:BRD-A09472452-015-19-2:10 	3.276506e-08 	8.154882e-06 	-1.812915 	13.568924
23 	CPC006_HCC515_6H:BRD-K54256913-001-01-2:10 	4.266165e-08 	9.871906e-06 	-1.670267 	12.309802
24 	NMH002_NEU.KCL_6H.4H:BRD-K17953061-001-12-7:10 	4.428195e-08 	1.019175e-05 	-1.849848 	13.603365
25 	CPC003_HA1E_24H:BRD-K65503129-001-01-4:10 	4.595894e-08 	1.046519e-05 	-1.613139 	11.836614
26 	CPC008_PC3_24H:BRD-K10361096-001-04-6:10 	4.849843e-08 	1.097734e-05 	-1.656641 	12.117123
27 	CPC010_MCF7_24H:BRD-K69676861-001-02-4:10 	4.949024e-08 	1.097734e-05 	-1.691177 	12.354862
28 	MUC.CP006_MCF7_6H:BRD-A39646320-001-01-3:3.3333 	7.585509e-08 	1.521090e-05 	-1.760792 	12.536866
29 	CPC009_VCAP_6H:BRD-A98444709-001-04-6:10 	8.817109e-08 	1.715689e-05 	-1.681006 	11.858952
30 	CPC018_HT29_6H:BRD-K21064560-001-01-6:10 	9.460221e-08 	1.799923e-05 	-1.761745 	12.374671
31 	CPC014_PC3_6H:BRD-A80775386-001-01-9:10 	1.050632e-07 	1.972653e-05 	-1.734593 	12.104945
32 	CPC009_PC3_6H:BRD-K71142328-001-03-8:10 	1.126185e-07 	2.087049e-05 	-1.674808 	11.637218
33 	CPC017_HT29_6H:BRD-K17743697-066-02-8:10 	1.436473e-07 	2.551617e-05 	-1.809702 	12.383250
34 	CPC006_A549_6H:BRD-K19295594-001-08-5:11.1 	1.543251e-07 	2.696531e-05 	-1.673520 	11.399286
35 	CPC014_MCF7_6H:BRD-K08115555-001-04-4:10 	1.599330e-07 	2.771891e-05 	-1.760213 	11.962518
36 	CPC007_VCAP_6H:BRD-K88198340-001-05-0:10 	1.717143e-07 	2.905500e-05 	-1.694254 	11.461959
37 	CPC019_VCAP_6H:BRD-K98824517-001-06-4:10 	1.842877e-07 	3.057819e-05 	-1.809175 	12.183896
38 	CPC006_HA1E_24H:BRD-K33583600-001-09-6:10 	2.774965e-07 	4.107909e-05 	-1.620730 	10.626706
39 	CPC013_HA1E_6H:BRD-K51967704-001-01-0:10 	3.306591e-07 	4.750063e-05 	-1.716427 	11.123512
40 	CPC014_NPC_24H:BRD-K70511574-001-01-0:10 	3.306591e-07 	4.750063e-05 	-1.754973 	11.373310
41 	CPC009_A375_6H:BRD-A98444709-001-04-6:10 	3.419300e-07 	4.846914e-05 	-1.698496 	10.982581
42 	CPC014_ASC_24H:BRD-K85402309-001-01-7:10 	7.437839e-07 	8.844623e-05 	-1.725883 	10.577166
43 	CPC010_PC3_6H:BRD-K06221026-001-05-0:10 	8.685558e-07 	9.612573e-05 	-1.721856 	10.436519
44 	CPC014_HT29_6H:BRD-A36707673-001-01-9:10 	8.685558e-07 	9.612573e-05 	-1.748554 	10.598338
45 	CPC013_SKB_24H:BRD-K74133369-001-01-8:10 	9.242494e-07 	9.997572e-05 	-1.672311 	10.091077
46 	CPC017_HT29_6H:BRD-A97454584-001-02-0:10 	9.826967e-07 	1.049084e-04 	-1.734887 	10.422471
47 	CPC019_PC3_24H:BRD-K90700939-001-01-5:10 	1.109826e-06 	1.158793e-04 	-1.732083 	10.314114
48 	LJP001_MDAMB231_24H:BRD-K64890080-001-09-6:0.4 	1.109826e-06 	1.158793e-04 	-1.793069 	10.677268
49 	CPC019_HA1E_6H:BRD-A19037878:10 	1.410119e-06 	1.362659e-04 	-1.741761 	10.190598
50 	LJP002_SKBR3_24H:BRD-K64857848-001-03-1:10 	1.799653e-06 	1.639178e-04 	-1.805296 	10.371083

Table 8. L1000FWD Results: Similar Signatures
Download CSV file: Similar Signatures for Metastatic vs. Primary_Tumor.csv
	Signature ID 	P-value 	FDR 	Z-score 	Combined Score
1 	CPC005_MCF7_24H:BRD-K21350491-001-02-1:10 	9.254490e-13 	2.641170e-09 	1.837618 	-22.113246
2 	CPC009_PC3_6H:BRD-K23149109-019-01-3:10 	2.607734e-12 	5.853230e-09 	1.728503 	-20.022526
3 	CPC020_A375_6H:BRD-K06750613-001-01-6:10 	2.734579e-12 	5.853230e-09 	1.651206 	-19.093073
4 	CPC011_PC3_24H:BRD-K23369905-008-01-6:10 	4.229576e-12 	8.132136e-09 	1.789321 	-20.351209
5 	CPC008_VCAP_6H:BRD-K42629487-001-05-2:10 	1.014933e-11 	1.671087e-08 	1.835401 	-20.177595
6 	CPC008_HT29_6H:BRD-K66032149-001-01-9:10 	2.628636e-11 	3.309684e-08 	1.800855 	-19.053536
7 	CPC002_HCC515_6H:BRD-A30437061-001-02-7:10 	3.586718e-11 	4.040627e-08 	1.813973 	-18.947498
8 	CPC005_MCF7_24H:BRD-K09991945-001-02-0:10 	1.337227e-10 	1.217987e-07 	1.859246 	-18.357813
9 	CPC014_VCAP_24H:BRD-K76698671-001-01-1:10 	1.537475e-10 	1.371204e-07 	1.756822 	-17.240030
10 	CPC018_HEPG2_6H:BRD-K26241953-001-01-0:10 	2.255197e-10 	1.892995e-07 	1.701474 	-16.413810
11 	CPC016_MCF7_24H:BRD-A19195498-050-09-1:10 	3.445168e-10 	2.587442e-07 	1.679213 	-15.890044
12 	CPC005_PC3_24H:BRD-K57222227-001-18-6:10 	3.622190e-10 	2.673488e-07 	1.809387 	-17.082479
13 	CPC016_HT29_6H:BRD-A18579359-001-02-3:10 	4.380396e-10 	3.024522e-07 	1.770922 	-16.573152
14 	CPC017_HT29_6H:BRD-K04546108-066-01-5:10 	4.798184e-10 	3.047293e-07 	1.665699 	-15.522521
15 	CPC012_VCAP_6H:BRD-K89626439-001-01-0:10 	4.911659e-10 	3.047293e-07 	1.731767 	-16.120620
16 	CPC012_MCF7_24H:BRD-K82971429-001-01-9:10 	5.207033e-10 	3.182425e-07 	1.730007 	-16.060365
17 	CPC015_MCF7_24H:BRD-K46137903-001-03-3:10 	5.352486e-10 	3.182425e-07 	1.713711 	-15.888579
18 	CPC020_A375_6H:BRD-K62300190-003-05-9:10 	6.083724e-10 	3.426818e-07 	1.657058 	-15.271167
19 	CPC011_VCAP_6H:BRD-K10961822-001-03-6:10 	8.169713e-10 	4.483811e-07 	1.764268 	-16.033299
20 	LJP001_MCF7_6H:BRD-K15592317-001-02-8:10 	8.517328e-10 	4.501460e-07 	1.632451 	-14.805832
21 	CPC006_HCC515_24H:BRD-K53903639-001-01-3:80 	1.091144e-09 	5.495388e-07 	1.795610 	-16.092470
22 	CPC020_MCF7_24H:BRD-K64517075-001-01-9:10 	1.399295e-09 	6.885337e-07 	1.627767 	-14.412400
23 	CPC010_VCAP_6H:BRD-K28143534-003-20-0:10 	1.701243e-09 	8.182980e-07 	1.734362 	-15.209027
24 	CPC008_VCAP_6H:BRD-K28180706-001-01-8:10 	1.944546e-09 	8.950975e-07 	1.810003 	-15.767262
25 	CPC005_VCAP_6H:BRD-K18036262-001-01-0:10 	5.849941e-09 	2.297524e-06 	1.858773 	-15.302996
26 	CPC015_A549_24H:BRD-K06593056-001-01-4:10 	6.345596e-09 	2.447285e-06 	1.727655 	-14.162498
27 	CPC017_A549_6H:BRD-K04546108-066-01-5:10 	6.922414e-09 	2.599488e-06 	1.665475 	-13.589845
28 	CPC003_PC3_6H:BRD-K15616905-001-01-5:10 	7.470038e-09 	2.687268e-06 	1.809323 	-14.703780
29 	CPC006_HCC15_6H:BRD-K56301217-001-01-7:11.1 	7.760683e-09 	2.768559e-06 	1.795785 	-14.563997
30 	CPC019_A375_6H:BRD-K99311057-001-02-6:10 	8.404769e-09 	2.949178e-06 	1.693610 	-13.676706
31 	CPC020_VCAP_6H:BRD-K95237249-001-21-6:10 	9.720712e-09 	3.292460e-06 	1.629372 	-13.055019
32 	CPC007_HT29_6H:BRD-K23673040-001-12-9:10 	9.844540e-09 	3.292460e-06 	1.797841 	-14.394960
33 	CPC008_MCF7_6H:BRD-A31946439-019-01-5:10 	1.292813e-08 	4.099558e-06 	1.763864 	-13.914181
34 	CPC007_HT29_6H:BRD-A58924247-001-08-5:10 	1.396135e-08 	4.299793e-06 	1.783224 	-14.007353
35 	CPC010_VCAP_24H:BRD-K78385490-019-02-2:10 	1.450621e-08 	4.435689e-06 	1.769366 	-13.869078
36 	CPC008_A375_24H:BRD-K89093471-001-03-8:10 	1.688908e-08 	4.986240e-06 	1.794934 	-13.950933
37 	CPC007_HT29_6H:BRD-A24021119-001-06-0:10 	1.821217e-08 	5.197633e-06 	1.771084 	-13.707551
38 	CPC012_MCF7_24H:BRD-K95976153-001-01-5:10 	1.963086e-08 	5.456997e-06 	1.724496 	-13.290796
39 	PCLB003_A375_24H:BRD-K04218075-048-12-5:10 	1.963086e-08 	5.456997e-06 	1.615811 	-12.453155
40 	CPC020_A375_6H:BRD-K94070024-001-07-2:10 	2.452552e-08 	6.363108e-06 	1.655571 	-12.599528
41 	CPC006_HT29_6H:BRD-A18763547-300-04-8:10 	3.153894e-08 	7.942063e-06 	1.828200 	-13.713606
42 	CPC014_HT29_6H:BRD-A55756846-001-16-2:10 	3.403512e-08 	8.325769e-06 	1.737716 	-12.977389
43 	CPC001_VCAP_24H:BRD-K15791587-003-01-7:10 	3.403512e-08 	8.325769e-06 	1.852436 	-13.834129
44 	CPC017_MCF7_24H:BRD-A27143604-001-01-2:10 	5.770564e-08 	1.235160e-05 	1.641580 	-11.883041
45 	CPC016_A375_6H:BRD-A35623999-001-04-0:10 	6.391853e-08 	1.334775e-05 	1.676213 	-12.059299
46 	CPC008_VCAP_6H:BRD-K37057377-001-01-5:10 	6.391853e-08 	1.334775e-05 	1.773134 	-12.756588
47 	CPC011_A549_24H:BRD-A57382968-002-04-1:10 	6.627077e-08 	1.363935e-05 	1.746276 	-12.535955
48 	CPC018_HEPG2_6H:BRD-K17497770-001-01-0:10 	6.870266e-08 	1.407221e-05 	1.687717 	-12.089165
49 	CPC006_HCC515_6H:BRD-A52650764-001-01-0:10 	7.381528e-08 	1.497611e-05 	1.787941 	-12.751335
50 	CPC020_VCAP_24H:BRD-A50157456-065-17-2:10 	1.165809e-07 	2.141937e-05 	1.628512 	-11.291077

Table 9. L1000FWD Results: Opposite Signatures
Download CSV file: Opposite Signatures for Metastatic vs. Primary_Tumor.csv
References

Agarwal, Vikram, et al. "Predicting effective microRNA target sites in mammalian mRNAs." elife 4 (2015): e05005.
Ashburner, M., Ball, C.A., Blake, J.A., Botstein, D., Butler, H., Cherry, J.M., Davis, A.P., Dolinski, K., Dwight, S.S. and Eppig, J.T. (2000) Gene Ontology: tool for the unification of biology. Nature genetics, 25, 25.
Chou, Chih-Hung, et al. "miRTarBase 2016: updates to the experimentally validated miRNA-target interactions database." Nucleic acids research 44.D1 (2016): D239-D247.
Clark, N.R. and Ma’ayan, A. (2011) Introduction to statistical methods to analyze large data sets: principal components analysis. Sci. Signal., 4, tr3-tr3.
Clark, Neil R., et al. "The characteristic direction: a geometrical approach to identify differentially expressed genes." BMC bioinformatics 15.1 (2014): 79.
Consortium, E.P. (2004) The ENCODE (ENCyclopedia of DNA elements) project. Science, 306, 636-640.
Croft, David, et al. "The Reactome pathway knowledgebase." Nucleic acids research 42.D1 (2014): D472-D477.
Duan, Q., et al. "L1000cds2: Lincs l1000 characteristic direction signatures search engine. NPJ Syst Biol Appl. 2016; 2: 16015." (2016).
Fernandez, Nicolas F., et al. "Clustergrammer, a web-based heatmap visualization and analysis tool for high-dimensional biological data." Scientific data 4 (2017): 170151.
Kanehisa, M. and Goto, S. (2000) KEGG: kyoto encyclopedia of genes and genomes. Nucleic acids research, 28, 27-30.
Kelder, Thomas, et al. "WikiPathways: building research communities on biological pathways." Nucleic acids research 40.D1 (2012): D1301-D1307.
Kuleshov, M.V., Jones, M.R., Rouillard, A.D., Fernandez, N.F., Duan, Q., Wang, Z., Koplev, S., Jenkins, S.L., Jagodnik, K.M. and Lachmann, A. (2016) Enrichr: a comprehensive gene set enrichment analysis web server 2016 update. Nucleic acids research, 44, W90-W97.
Lachmann, A., Xu, H., Krishnan, J., Berger, S.I., Mazloom, A.R. and Ma'ayan, A. (2010) ChEA: transcription factor regulation inferred from integrating genome-wide ChIP-X experiments. Bioinformatics, 26, 2438-2444.
Lachmann, Alexander, and Avi Ma'ayan. "KEA: kinase enrichment analysis." Bioinformatics 25.5 (2009): 684-686.
Ritchie, Matthew E., et al. "limma powers differential expression analyses for RNA-sequencing and microarray studies." Nucleic acids research 43.7 (2015): e47-e47.
Wang, Zichen, et al. "L1000FWD: fireworks visualization of drug-induced transcriptomic signatures." Bioinformatics 34.12 (2018): 2150-2152.

